{"version":3,"sources":["consts/index.ts","components/ui/Logo.tsx","layout/Header.tsx","components/ui/Card.tsx","components/ui/Center.tsx","components/ui/Align.tsx","components/enhancer/WithHeading.tsx","components/enhancer/WithTitle.tsx","components/select/RadioGroupComponent.tsx","components/select/SingleSelectComponent.tsx","components/select/MultiSelectComponent.tsx","components/forms/expense/CreateExpenseFormComponent.tsx","store/expense/types.ts","store/expense/actions.ts","utils/index.ts","components/forms/expense/CreateExpenseFormContainer.tsx","components/readonly/Expense.tsx","components/list/common-expenses/CommonExpensesListItem.tsx","components/list/common-expenses/CommonExpensesList.tsx","components/list/common-expenses/CommonExpensesListContainer.tsx","screens/Expense.tsx","components/forms/tag/Label.tsx","components/forms/tag/CreateTagFormComponent.tsx","store/tag/types.ts","store/tag/actions.ts","components/forms/tag/CreateTagFormContainer.tsx","screens/NewTag.tsx","components/forms/account/CreateAndSelectAccountFormComponent.tsx","store/account/types.ts","store/account/actions.ts","components/forms/account/CreateAndSelectAccountFormContainer.tsx","screens/Account.tsx","components/tables/TableComponent.tsx","components/tables/column-configurations/expense.tsx","components/tables/helpers/expense.ts","components/tables/helpers/common.ts","components/tables/ExpenseTableContainer.tsx","components/tables/column-configurations/category.tsx","components/tables/helpers/category.ts","components/tables/CategoryTableContainer.tsx","components/tables/column-configurations/tag.tsx","components/tables/helpers/tag.ts","components/tables/TagTableContainer.tsx","components/dropdowns/account/SelectAccountComponent.tsx","components/dropdowns/account/SelectAccountContainer.tsx","components/dropdowns/period/SelectPeriodComponent.tsx","store/period/types.ts","store/period/actions.ts","components/dropdowns/period/SelectPeriodContainer.tsx","components/readonly/utils/index.ts","components/readonly/Balance.tsx","components/readonly/MoneyFlow.tsx","screens/Dashboard.tsx","layout/Main.tsx","App.tsx","assets/index.ts","store/initialState.ts","store/rootReducer.ts","store/account/reducer.ts","store/tag/reducer.ts","store/expense/reducer.ts","store/period/reducer.ts","index.tsx"],"names":["spaces","LogoComponent","Logo","styled","h2","HeaderComponent","Header","StyledNavLink","to","header","NavLink","CardComponent","children","width","Card","div","CenteredComponent","Center","AlignComponent","type","content","Align","Container","Hr","hr","WithTitleComponent","title","RadioGroupComponent","selected","handleSelect","options","Group","value","onChange","map","id","name","Button","key","SingleSelectComponent","style","Option","MultiSelectComponent","placeholder","mode","CreateExpenseComponent","category","tag","radio","account","handleSubmit","unsignedAmount","handleAmount","Expense","StyledInput","onClick","Input","CREATE_EXPENSE","createExpense","expense","objectify","list","prop","reduce","memo","acc","generateArray","size","Array","fill","_","genId","from","Math","floor","random","CreateExpenseFormContainer","useSelector","accountList","categories","tags","selectedAccount","dispatch","useDispatch","bindActionCreators","expenseActionCreators","useState","categoryId","setCategory","accountId","setAccount","tagNames","setTagNames","radioId","setRadio","setAmount","categoryOptions","Object","values","accountOptions","filteredTagOptions","byIds","filter","includes","Number","newSelection","e","target","input","slice","isNaN","amount","tagIds","byNames","newExpense","createdTs","Date","item","categoryName","Inline","color","toUpperCase","CommonExpensesList","dataSource","itemLayout","renderItem","Item","CommonExpensesListContainer","expenses","tagId","console","log","ExpenseComponent","Label","label","LabelComponent","CreateTagFormComponent","tagExists","handleChange","disabled","marginRight","allowClear","filterOption","inputValue","option","props","indexOf","CREATE_TAG","createTag","CreateTagFormContainer","tagActionCreators","setInput","keys","message","success","CreateAndSelectAccountFormComponent","loading","accountExists","handleCreate","SELECT_ACCOUNT","CREATE_ACCOUNT","createAccount","selectAccount","CreateAndSelectAccountFormContainer","accountActionCreators","undefined","find","selectDisabled","useEffect","info","accountSelected","TableComponent","columns","pagination","pageSize","scroll","y","dataIndex","render","length","createExpenseDataSource","created","toDateString","filterExpensesByAccount","filterExpenses","periodId","x","startPeriod","setMinutes","getMinutes","filterExpensesByPeriod","selectedPeriod","filteredExpenses","groupExpensesByCategory","createCategoryDataSource","categorizedExpenses","entries","groupExpensesByTag","groupedExpenses","createTagDataSource","SelectAccountComponent","SelectAccountContainer","SelectPeriodComponent","period","SELECT_PERIOD","selectPeriod","periodList","periodActionCreators","sumExpenses","expenseArray","sum","Balance","accountExpenses","balance","MoneyFlow","moneyFlow","TabPane","Tabs","PresenterComponent","SplitView","tab","MainComponent","Main","path","exact","component","Dashboard","Tag","Account","main","config","top","duration","App","tagArray","createDate","differenceInMinutes","tempDate","initialState","reducers","state","rootReducer","action","update","previousState","reducer","store","createStore","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.78a6ea8b.chunk.js","sourcesContent":["export const colors = {\n  primary: '#1890ff',\n};\n\nexport const spaces = {\n  xxs: '0.2rem',\n  xs: '0.4rem',\n  s: '0.8rem',\n  m: '1.2rem',\n  l: '1.6rem',\n  xl: '3.2rem',\n};\n\nexport const headerSize = '4.8rem';\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function LogoComponent(): JSX.Element {\n  return <Logo>Scooty Wallet</Logo>;\n}\n\nconst Logo = styled.h2`\n  margin: 0 calc(12vw - 5rem) 0 5vw;\n  white-space: nowrap;\n  user-select: none;\n  cursor: pointer;\n  width: min-content;\n  color: white;\n  font-weight: bolder;\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { colors, spaces, headerSize } from '../consts';\nimport Logo from '../components/ui/Logo';\n\nexport default function HeaderComponent() {\n  return (\n    <Header>\n      <Logo />\n      <StyledNavLink to=\"/\">Dashboard</StyledNavLink>\n      <StyledNavLink to=\"/expense\">New Transaction</StyledNavLink>\n      <StyledNavLink to=\"/tag\">New Tag</StyledNavLink>\n      <StyledNavLink to=\"/account\">New Account</StyledNavLink>\n    </Header>\n  );\n}\n\nconst Header = styled.header`\n  height: ${headerSize};\n  width: 100%;\n  background-color: ${colors.primary};\n\n  display: flex;\n  align-items: center;\n\n  position: fixed;\n  z-index: 2;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  flex-shrink: 0;\n  font-weight: 700;\n  font-size: 1.8rem;\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: none;\n  border-radius: ${spaces.xs};\n  margin: 0 ${spaces.s};\n  padding: ${spaces.xs};\n  :hover {\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { spaces } from '../../consts';\n\ntype CardProps = {\n  children: JSX.Element;\n} & StyledProps;\n\ntype StyledProps = {\n  width?: string;\n};\n\nexport default function CardComponent({\n  children,\n  width,\n}: CardProps): JSX.Element {\n  return <Card width={width}>{children}</Card>;\n}\n\nconst Card = styled.div`\n  min-width: 300px;\n  height: fit-content;\n  width: ${({ width }: StyledProps) => width || 'fit-content'};\n\n  margin: ${spaces.l};\n  background-color: white;\n  padding: ${spaces.l};\n  box-shadow: 0 ${spaces.xs} ${spaces.s} 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  border-radius: ${spaces.s};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype CenterProps = {\n  children: JSX.Element;\n};\n\nexport default function CenteredComponent({ children }: CenterProps) {\n  return <Center>{children}</Center>;\n}\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype AlignType = 'horizontal' | 'vertical';\ntype ContentType = 'between' | 'evenly';\n\ntype StyledProps = {\n  type?: AlignType;\n  content?: ContentType;\n};\n\ntype AlignProps = {\n  children: JSX.Element[];\n} & StyledProps;\n\nexport default function AlignComponent({\n  children,\n  type = 'horizontal',\n  content = 'between',\n}: AlignProps) {\n  return <Align type={type} content={content}>{children}</Align>;\n}\n\nconst Align = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: ${({ content }: StyledProps) =>\n    content === 'evenly' ? 'space-evenly' : 'space-between'};\n\n  flex-direction: ${({ type }: StyledProps) =>\n    type === 'vertical' ? 'column' : 'row'};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { spaces } from '../../consts/index';\n\ntype WithHeadingType = {\n  title: string;\n  children: JSX.Element;\n};\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst Hr = styled.hr`\n  margin-bottom: ${spaces.m};\n`;\n\nexport default function WithTitleComponent({\n  title,\n  children,\n}: WithHeadingType) {\n  return (\n    <Container>\n      <h2>{title}</h2>\n      <Hr />\n      {children}\n    </Container>\n  );\n}\n","import React from 'react';\n\ntype WithTitleType = {\n  title: string;\n  children: JSX.Element;\n};\n\nexport default function WithTitleComponent({ title, children }: WithTitleType) {\n  return (\n    <div>\n      <h3>{title}</h3>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Radio } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport { IdNameTuple } from '../../types/form';\n\ntype PresenterType = {\n  selected: string | number | string[];\n  options: IdNameTuple[];\n  handleSelect: (e: RadioChangeEvent) => void;\n};\n\nexport default function RadioGroupComponent({\n  selected,\n  handleSelect,\n  options,\n}: PresenterType) {\n  return (\n    <Radio.Group value={selected} onChange={handleSelect}>\n      {options.map(({ id, name }) => (\n        <Radio.Button key={id} value={id}>\n          {name}\n        </Radio.Button>\n      ))}\n    </Radio.Group>\n  );\n}\n","import React, { SetStateAction } from 'react';\nimport { Select } from 'antd';\nimport { IdNameTuple } from '../../types/form';\n\ntype PresenterProps = {\n  selected: string;\n  options: IdNameTuple[];\n  handleSelect: (e: SetStateAction<string>) => void;\n};\nexport default function SingleSelectComponent({\n  selected,\n  options,\n  handleSelect,\n}: PresenterProps) {\n  return (\n    <Select value={selected} onChange={handleSelect} style={{ width: '100%' }}>\n      {options.map(({ id, name }) => (\n        <Select.Option key={id} value={id}>\n          {name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n","import React from 'react';\nimport { Select } from 'antd';\nimport { IdNameTuple } from '../../types/form';\n\ntype PresenterType = {\n  selected: string[];\n  options: IdNameTuple[];\n  handleSelect: (e: string[]) => void;\n  placeholder: string;\n};\n\nexport default function MultiSelectComponent({\n  selected,\n  options,\n  handleSelect,\n  placeholder,\n}: PresenterType) {\n  return (\n    <Select\n      mode=\"multiple\"\n      placeholder={placeholder}\n      value={selected}\n      onChange={handleSelect}\n      style={{ width: '100%' }}\n    >\n      {options.map(({ id, name }) => (\n        <Select.Option key={id} value={name}>\n          {name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport styled from 'styled-components';\nimport { Button, Input } from 'antd';\n\nimport {\n  RadioGroupComponent,\n  SingleSelectComponent,\n  MultiSelectComponent,\n} from '../../select';\n\nimport { FormElementProps } from '../../../types/form';\nimport { WithTitle } from '../../enhancer';\nimport { spaces } from '../../../consts';\n\ntype CreateExpenseFormProps = {\n  category: FormElementProps;\n  tag: FormElementProps;\n  radio: FormElementProps;\n  account: FormElementProps;\n\n  unsignedAmount: number;\n  handleAmount: (e: ChangeEvent<HTMLInputElement>) => void;\n\n  handleSubmit: () => void;\n};\n\nexport default function CreateExpenseComponent({\n  category,\n  tag,\n  radio,\n  account,\n  handleSubmit,\n  unsignedAmount,\n  handleAmount,\n}: CreateExpenseFormProps) {\n  return (\n    <Expense>\n      <WithTitle title={'Amount'}>\n        <RadioGroupComponent\n          selected={radio.selected}\n          options={radio.options}\n          handleSelect={radio.onChange}\n        />\n      </WithTitle>\n\n      <StyledInput\n        value={`${radio.selected} ${unsignedAmount}`}\n        onChange={handleAmount}\n        placeholder=\"Enter amount\"\n      />\n\n      <WithTitle title={'Category'}>\n        <SingleSelectComponent\n          options={category.options}\n          selected={category.selected}\n          handleSelect={category.onChange}\n        />\n      </WithTitle>\n\n      <WithTitle title={'Tags'}>\n        <MultiSelectComponent\n          options={tag.options}\n          selected={tag.selected}\n          handleSelect={tag.onChange}\n          placeholder=\"Select tags\"\n        />\n      </WithTitle>\n\n      <WithTitle title={'Account'}>\n        <SingleSelectComponent\n          options={account.options}\n          selected={account.selected}\n          handleSelect={account.onChange}\n        />\n      </WithTitle>\n\n      <Button type=\"primary\" onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Expense>\n  );\n}\n\nconst Expense = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  div + div,\n  button {\n    margin-top: ${spaces.m};\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  margin: ${spaces.s} 0;\n`;\n","import { Expense } from '../../types/model';\n\nexport const CREATE_EXPENSE = 'CREATE_EXPENSE';\n\ninterface CreateExpenseAction {\n  type: typeof CREATE_EXPENSE;\n  expense: Expense;\n}\n\nexport type ExpenseActionTypes = CreateExpenseAction;\n","import { CREATE_EXPENSE } from './types';\nimport { Expense } from '../../types/model';\n\nexport const createExpense = (expense: Expense) => ({\n  type: CREATE_EXPENSE,\n  expense,\n});\n","export const objectify = (list: any, prop = 'id') => {\n  return list.reduce(\n    (memo: { [key: number]: any }, acc: any) => ({\n      ...memo,\n      [acc[prop]]: acc,\n    }),\n    {},\n  );\n};\n\nexport const generateArray = (size: number, name: string) =>\n  Array(size)\n    .fill(null)\n    .map((_, id) => ({ id, name: `${name}${id + 1}` }));\n\nexport const generateObject = (\n  size: number,\n  name: string,\n): { [key: string]: any } => objectify(generateArray(size, name));\n\nexport const genId = (from: number) =>\n  Math.floor(Math.random() * 999 + from + 1);\n","import React, { ChangeEvent, SetStateAction, useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CreateExpenseFormComponent from './CreateExpenseFormComponent';\nimport { State } from '../../../store/initialState';\nimport * as expenseActionCreators from '../../../store/expense/actions';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport { genId } from '../../../utils';\n\nexport default function CreateExpenseFormContainer() {\n  const { categories, tags, accountList, selectedAccount } = useSelector(\n    ({ accountList, categories, tags, selectedAccount }: State) => ({\n      categories,\n      tags,\n      accountList,\n      selectedAccount,\n    }),\n  );\n\n  const dispatch = useDispatch();\n  const { createExpense } = bindActionCreators(expenseActionCreators, dispatch);\n\n  const [categoryId, setCategory] = useState(categories[0].id);\n  const [accountId, setAccount] = useState(selectedAccount.id);\n  const [tagNames, setTagNames] = useState([] as string[]);\n  const [radioId, setRadio] = useState('-');\n  const [unsignedAmount, setAmount] = useState(0);\n\n  const categoryOptions = Object.values(categories);\n  const accountOptions = Object.values(accountList);\n  const tagOptions = Object.values(tags.byIds);\n  const filteredTagOptions = tagOptions.filter(\n    ({ name }) => !tagNames.includes(name),\n  );\n\n  const radioOptions = [\n    { id: '-', name: 'Expense' },\n    { id: '+', name: 'Income' },\n  ];\n\n  const handleCategorySelect = (id: SetStateAction<string>) =>\n    setCategory(Number(id));\n\n  const handleAccountSelect = (id: SetStateAction<string>) =>\n    setAccount(Number(id));\n\n  const handleTagSelect = (newSelection: string[]) => setTagNames(newSelection);\n  const handleRadioSelect = (e: RadioChangeEvent) => setRadio(e.target.value);\n\n  // removes sign and extra space\n  // input value is bound to the amount variable which is number\n  const handleAmount = (e: ChangeEvent<HTMLInputElement>) => {\n    const input = Number(e.target.value.slice(2));\n    if (!Number.isNaN(input)) setAmount(Number(e.target.value.slice(2)));\n  };\n\n  const handleSubmit = () => {\n    const amount = radioId === '-' ? unsignedAmount * -1 : unsignedAmount;\n    const tagIds = tagNames.map((name) => tags.byNames[name].id);\n\n    const newExpense = {\n      id: genId(100),\n      amount,\n      categoryId,\n      accountId,\n      tagIds,\n      createdTs: new Date(),\n    };\n    createExpense(newExpense);\n  };\n\n  const category = {\n    selected: categoryId,\n    options: categoryOptions,\n    onChange: handleCategorySelect,\n  };\n\n  const account = {\n    selected: accountId,\n    options: accountOptions,\n    onChange: handleAccountSelect,\n  };\n\n  const tag = {\n    selected: tagNames,\n    options: filteredTagOptions,\n    onChange: handleTagSelect,\n  };\n\n  const radio = {\n    selected: radioId,\n    options: radioOptions,\n    onChange: handleRadioSelect,\n  };\n\n  return (\n    <CreateExpenseFormComponent\n      category={category}\n      account={account}\n      tag={tag}\n      radio={radio}\n      unsignedAmount={unsignedAmount}\n      handleAmount={handleAmount}\n      handleSubmit={handleSubmit}\n    />\n  );\n}\n","import React from 'react';\nimport { ExpenseAsStringType } from '../../types/model';\nimport { Tag } from 'antd';\nimport styled from 'styled-components';\n\nexport default function Expense({\n  item: { amount, categoryName, tagNames },\n}: {\n  item: ExpenseAsStringType;\n}) {\n  return (\n    // TODO: make prettier\n    <Inline>\n      <h2>{amount}</h2>\n      <h3>{categoryName}</h3>\n      <div>\n        {tagNames.map((tag, id) => (\n          <Tag color=\"blue\" key={id}>\n            {tag.toUpperCase()}\n          </Tag>\n        ))}\n      </div>\n    </Inline>\n  );\n}\n\nconst Inline = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n`;\n","import React from 'react';\nimport { Button } from 'antd';\nimport { Align } from '../../ui';\nimport { ExpenseAsStringType } from '../../../types/model';\nimport Expense from '../../readonly/Expense';\n\nexport default function CommonExpensesList({\n  item,\n  onClick,\n}: {\n  item: ExpenseAsStringType;\n  onClick: () => void;\n}) {\n  return (\n    <Align>\n      <Expense item={item}></Expense>\n      <Button color=\"blue\" onClick={onClick}>\n        Add\n      </Button>\n    </Align>\n  );\n}\n","import React from 'react';\nimport { List } from 'antd';\nimport CommonExpensesListItem from './CommonExpensesListItem';\nimport { ExpenseAsStringType } from '../../../types/model';\n\ntype CommonExpensesListProps = {\n  dataSource: ExpenseAsStringType[];\n  onClick: () => void;\n};\n\nexport default function CommonExpensesList({\n  dataSource,\n  onClick,\n}: CommonExpensesListProps) {\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={dataSource}\n      renderItem={(item) => (\n        <List.Item>\n          <CommonExpensesListItem item={item} onClick={onClick} />\n        </List.Item>\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport CommonExpensesList from './CommonExpensesList';\nimport { State } from '../../../store/initialState';\nimport { useSelector } from 'react-redux';\nimport { ExpenseAsStringType } from '../../../types/model';\n\nexport default function CommonExpensesListContainer() {\n  const { expenses, categories, tags } = useSelector(\n    ({ expenses, categories, tags }: State) => ({\n      expenses,\n      categories,\n      tags,\n    }),\n  );\n\n  // TODO: get most common expenses\n  const dataSource: ExpenseAsStringType[] = Object.values(expenses)\n    .slice(0, 5)\n    .map(\n      ({ amount, categoryId, tagIds }): ExpenseAsStringType => {\n        const categoryName = categories[categoryId].name;\n        const tagNames = tagIds.map((tagId) => tags.byIds[tagId].name);\n\n        return { amount, categoryName, tagNames };\n      },\n    );\n\n  const onClick = () => {\n    console.log('Item added');\n\n\n    /*\n    \n      const innerOnnCick(item: Expense) => {\n        createExpense(item);\n      }\n\n      return innerOnClick;\n    \n    */\n  };\n\n  return <CommonExpensesList dataSource={dataSource} onClick={onClick} />;\n}\n","import React from 'react';\nimport { Center, Align, Card } from '../components/ui/';\nimport { WithHeading } from '../components/enhancer';\nimport CreateExpenseFormContainer from '../components/forms/expense/CreateExpenseFormContainer';\nimport CommonExpensesListContainer from '../components/list/common-expenses/CommonExpensesListContainer';\n\nexport default function ExpenseComponent() {\n  return (\n    <Center>\n      <Align content=\"evenly\">\n        <Card width={'350px'}>\n          <WithHeading title={'Add New Transaction'}>\n            <CreateExpenseFormContainer />\n          </WithHeading>\n        </Card>\n        <Card width={'60%'}>\n          <WithHeading title={'Add Common Transaction'}>\n            <CommonExpensesListContainer />\n          </WithHeading>\n        </Card>\n      </Align>\n    </Center>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Label = styled.label`\n  display: block;\n  color: ${({ color }) => color || 'black'};\n  font-size: 1.2rem;\n`;\n\ntype LabelProps = { title: string; color: string };\n\nexport default function LabelComponent({ title, color }: LabelProps) {\n  return <Label color={color}>{title}</Label>;\n}\n","import React from 'react';\nimport { AutoComplete, Button } from 'antd';\nimport Label from './Label';\nimport Align from '../../ui/Align';\n\ntype PresenterProps = {\n  input: string;\n  tagExists: boolean;\n  tagNames: string[];\n  handleChange: (e: any) => void;\n  disabled: boolean;\n  handleSubmit: () => void;\n};\n\nexport default function CreateTagFormComponent({\n  input,\n  tagExists,\n  tagNames,\n  handleChange,\n  disabled,\n  handleSubmit,\n}: PresenterProps) {\n  return (\n    <div>\n      {tagExists && (\n        <Label\n          title=\"This tag already exists. Please enter a new one.\"\n          color=\"red\"\n        />\n      )}\n      <Align>\n        <AutoComplete\n          style={{\n            width: 200,\n            marginRight: '1rem',\n          }}\n          dataSource={tagNames}\n          placeholder=\"Type to create a new tag\"\n          allowClear={true}\n          value={input}\n          onChange={handleChange}\n          filterOption={(inputValue: string, option: any): boolean =>\n            option.props.children\n              .toUpperCase()\n              .indexOf(inputValue.toUpperCase()) !== -1\n          }\n        />\n        <Button type=\"primary\" disabled={disabled} onClick={handleSubmit}>\n          Create\n        </Button>\n      </Align>\n    </div>\n  );\n}\n","import { Tag } from '../../types/model';\n\nexport const CREATE_TAG = 'CREATE_TAG';\n\ninterface CreateTagAction {\n  type: typeof CREATE_TAG;\n  tag: Tag;\n}\n\nexport type TagActionTypes = CreateTagAction;\n","import { CREATE_TAG } from './types';\nimport { Tag } from '../../types/model';\n\nexport const createTag = (tag: Tag) => ({\n  type: CREATE_TAG,\n  tag,\n});\n","import React, { useState, SetStateAction } from 'react';\nimport CreateTagFormComponent from './CreateTagFormComponent';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { State } from '../../../store/initialState';\nimport * as tagActionCreators from '../../../store/tag/actions';\nimport { message } from 'antd';\nimport { genId } from '../../../utils';\n\nexport default function CreateTagFormContainer() {\n  const { tags } = useSelector(({ tags }: State) => ({ tags }));\n\n  const dispatch = useDispatch();\n  const { createTag } = bindActionCreators(tagActionCreators, dispatch);\n\n  const [input, setInput] = useState('');\n\n  const tagNames = Object.keys(tags.byNames);\n  const tagExists = tagNames.includes(input);\n  const disabled = tagExists || input === '';\n\n  const handleSubmit = () => {\n    createTag({ id: genId(20), name: input });\n    message.success(`Tag ${input} was successfully created`);\n    setInput('');\n  };\n  const handleChange = (e: SetStateAction<string>) => setInput(e);\n\n  return (\n    <CreateTagFormComponent\n      input={input}\n      tagExists={tagExists}\n      disabled={disabled}\n      tagNames={tagNames}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n    />\n  );\n}\n","import React from 'react';\nimport Card from '../components/ui/Card';\nimport Centered from '../components/ui/Center';\nimport CreateTagContainer from '../components/forms/tag/CreateTagFormContainer';\nimport WithHeading from '../components/enhancer/WithHeading';\n\nexport default function Container() {\n  return (\n    <Centered>\n      <Card width={'325px'}>\n        <WithHeading title={'Create a new tag'}>\n          <CreateTagContainer />\n        </WithHeading>\n      </Card>\n    </Centered>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { AutoComplete, Button } from 'antd';\nimport { Align } from '../../ui';\n\ntype CreateAndSelectAccountProps = {\n  input: string;\n  loading: boolean;\n  accountExists: boolean;\n  dataSource: string[];\n  disabled: boolean;\n  handleCreate: (e: MouseEvent) => void;\n  handleChange: (e: any) => void;\n  handleSelect: (e: MouseEvent) => void;\n};\nexport default function CreateAndSelectAccountFormComponent({\n  input,\n  loading,\n  accountExists,\n  dataSource,\n  disabled,\n  handleChange,\n  handleCreate,\n  handleSelect,\n}: CreateAndSelectAccountProps) {\n  return (\n    <Align>\n      <AutoComplete\n        style={{ width: 200 }}\n        dataSource={dataSource}\n        placeholder=\"Type to create a new account:\"\n        allowClear={true}\n        value={input}\n        onChange={handleChange}\n      />\n\n      {!accountExists ? (\n        <Button\n          type=\"primary\"\n          loading={loading}\n          onClick={handleCreate}\n          disabled={disabled}\n        >\n          Create\n        </Button>\n      ) : (\n        <Button\n          type=\"primary\"\n          loading={loading}\n          onClick={handleSelect}\n          disabled={disabled}\n        >\n          Select\n        </Button>\n      )}\n    </Align>\n  );\n}\n","import { Account } from '../../types/model';\n\nexport const SELECT_ACCOUNT = 'SELECT_ACCOUNT';\nexport const CREATE_ACCOUNT = 'CREATE_ACCOUNT';\n\ninterface SelectAccountAction {\n  type: typeof SELECT_ACCOUNT;\n  account: Account;\n}\n\ninterface CreateAccountAction {\n  type: typeof CREATE_ACCOUNT;\n  account: Account;\n}\n\nexport type AccountActionTypes = SelectAccountAction | CreateAccountAction;\n","import { CREATE_ACCOUNT, SELECT_ACCOUNT } from './types';\nimport { Account } from '../../types/model';\n\nexport const createAccount = (account: Account) => ({\n  type: CREATE_ACCOUNT,\n  account,\n});\n\nexport const selectAccount = (account: Account) => ({\n  type: SELECT_ACCOUNT,\n  account,\n});\n","import React, { useState, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { message } from 'antd';\nimport CreateAndSelectAccountFormComponent from './CreateAndSelectAccountFormComponent';\nimport * as accountActionCreators from '../../../store/account/actions';\nimport { State } from '../../../store/initialState';\nimport { genId } from '../../../utils';\n\nexport default function CreateAndSelectAccountFormContainer() {\n  const { selectedAccount, accountList } = useSelector(\n    ({ selectedAccount, accountList }: State) => ({\n      selectedAccount,\n      accountList,\n    }),\n  );\n  const dispatch = useDispatch();\n  const { createAccount, selectAccount } = bindActionCreators(\n    accountActionCreators,\n    dispatch,\n  );\n\n  const [input, setInput] = useState(\n    selectedAccount ? selectedAccount.name : '',\n  );\n  const [loading] = useState(false);\n\n  const accountExists =\n    Object.values(accountList).find(({ name }) => name === input) !== undefined;\n  const selectDisabled = input === selectedAccount.name;\n\n  useEffect(() => {\n    if (selectedAccount) {\n      message.info(`${selectedAccount.name} is now the default account.`);\n    }\n  }, [selectedAccount]);\n\n  return (\n    <CreateAndSelectAccountFormComponent\n      input={input}\n      loading={loading}\n      accountExists={accountExists}\n      dataSource={Object.values(accountList).map(({ name }) => name)}\n      handleChange={(e) => setInput(e)}\n      handleCreate={() =>\n        createAccount({\n          id: genId(20),\n          name: input,\n        })\n      }\n      handleSelect={() => {\n        const accountSelected = Object.values(accountList).find(\n          ({ name }) => name === input,\n        );\n        selectAccount(accountSelected || { id: 2, name: 'Account3' });\n      }}\n      disabled={selectDisabled}\n    />\n  );\n}\n","import React from 'react';\nimport Card from '../components/ui/Card';\nimport Centered from '../components/ui/Center';\nimport CreateAndSelectAccountContainer from '../components/forms/account/CreateAndSelectAccountFormContainer';\nimport WithHeading from '../components/enhancer/WithHeading';\n\nexport default function Container() {\n  return (\n    <Centered>\n      <Card width={'325px'}>\n        <WithHeading title={'Create or Select account'}>\n          <CreateAndSelectAccountContainer />\n        </WithHeading>\n      </Card>\n    </Centered>\n  );\n}\n","import React from 'react';\nimport { Table } from 'antd';\n\ntype TableComponentProps = {\n  columns: {\n    title: string;\n    dataIndex: string;\n    key: string;\n  }[];\n\n  dataSource: { key: number; [props: string]: any | any[] }[];\n};\n\nexport default function TableComponent({\n  columns,\n  dataSource,\n}: TableComponentProps) {\n  return (\n    <Table\n      size=\"small\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={{ pageSize: 50 }}\n      scroll={{ y: 240 }}\n    />\n  );\n}\n","import React from 'react';\nimport { Tag } from 'antd';\n\nexport const columns = [\n  {\n    title: 'Category',\n    dataIndex: 'category',\n    key: 'category',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount',\n    key: 'amount',\n  },\n  {\n    title: 'Tags',\n    dataIndex: 'tags',\n    key: 'tags',\n    render: (tagNames: string[]) => (\n      <span>\n        {tagNames.map((tag) => {\n          let color = tag.length > 5 ? 'geekblue' : 'blue';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: 'Added',\n    dataIndex: 'created',\n    key: 'created',\n  },\n];\n","import { Expense, CategoryList, TagList } from '../../../types/model';\n\ntype ExpenseDataItem = { key: number } & {\n  amount: number;\n  category: string;\n  tags: string[];\n  created: string;\n};\n\nexport const createExpenseDataSource = (\n  expenses: Expense[],\n  categories: CategoryList,\n  tags: TagList,\n): ExpenseDataItem[] => {\n  return expenses.map(({ id, amount, categoryId, tagIds, createdTs }) => {\n    const category = categories[categoryId];\n    const tagNames = tagIds.map((tagId) => tags.byIds[tagId].name);\n\n    return {\n      amount,\n      key: id,\n      category: category ? category.name : '',\n      tags: tagNames,\n      created: createdTs.toDateString(),\n    };\n  });\n};\n","import { Expense } from '../../../types/model';\n\nexport const filterExpensesByAccount = (\n  expenses: Expense[],\n  id: number,\n): Expense[] => expenses.filter(({ accountId }) => accountId === id);\n\nconst filterExpensesByPeriod = (\n  expenses: Expense[],\n  startPeriod: Date,\n): Expense[] => {\n  return expenses.filter(({ createdTs }) => createdTs > startPeriod);\n};\n\nexport const filterExpenses = (\n  expenses: Expense[],\n  accountId: number,\n  periodId: number,\n): Expense[] => {\n  const x = filterExpensesByAccount(expenses, accountId);\n\n  if (periodId === -1) {\n    return x;\n  }\n\n  const startPeriod = new Date();\n  startPeriod.setMinutes(startPeriod.getMinutes() - periodId);\n\n  const y = filterExpensesByPeriod(x, startPeriod);\n  return y;\n};\n","import React from 'react';\nimport Table from './TableComponent';\nimport { State } from '../../store/initialState';\nimport { useSelector } from 'react-redux';\nimport { columns } from './column-configurations/expense';\nimport { createExpenseDataSource } from './helpers/expense';\nimport { filterExpenses } from './helpers/common';\n\nexport default function Container() {\n  const {\n    tags,\n    expenses,\n    categories,\n    selectedAccount,\n    selectedPeriod,\n  } = useSelector(\n    ({\n      tags,\n      expenses,\n      categories,\n      selectedAccount,\n      selectedPeriod,\n    }: State) => ({\n      tags,\n      expenses,\n      categories,\n      selectedAccount,\n      selectedPeriod,\n    }),\n  );\n\n  const filteredExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const dataSource = createExpenseDataSource(\n    filteredExpenses,\n    categories,\n    tags,\n  );\n\n  return <Table columns={columns} dataSource={dataSource} />;\n}\n","export const columns = [\n  {\n    title: 'Category',\n    dataIndex: 'category',\n    key: 'category',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount',\n    key: 'amount',\n  },\n];\n","import { ExpenseList, CategoryList } from '../../../types/model';\n\nexport const groupExpensesByCategory = (\n  expenses: ExpenseList,\n): { [key: number]: number } => {\n  return Object.values(expenses).reduce(\n    (\n      memo: { [categoryId: number]: number },\n      { amount, categoryId }: { amount: number; categoryId: number },\n    ) => {\n      return {\n        ...memo,\n        [categoryId]: memo[categoryId] ? memo[categoryId] + amount : amount,\n      };\n    },\n    {},\n  );\n};\n\ntype CategoryDataItem = { key: number } & {\n  amount: number;\n  category: string;\n};\n\nexport const createCategoryDataSource = (\n  categorizedExpenses: {\n    [key: number]: number;\n  },\n  categories: CategoryList,\n): CategoryDataItem[] =>\n  Object.entries(categorizedExpenses).map(([categoryId, amount]) => {\n    const category = categories[Number(categoryId)];\n    return {\n      amount,\n      key: Number(categoryId),\n      category: category ? category.name : '',\n    };\n  });\n","import React from 'react';\nimport Table from './TableComponent';\nimport { State } from '../../store/initialState';\nimport { useSelector } from 'react-redux';\nimport { columns } from './column-configurations/category';\nimport {\n  groupExpensesByCategory,\n  createCategoryDataSource,\n} from './helpers/category';\nimport { filterExpenses } from './helpers/common';\n\nexport default function Container() {\n  const { categories, expenses, selectedAccount, selectedPeriod } = useSelector(\n    ({ categories, expenses, selectedAccount, selectedPeriod }: State) => ({\n      categories,\n      expenses,\n      selectedAccount, selectedPeriod\n    }),\n  );\n\n  const filteredExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const categorizedExpenses = groupExpensesByCategory(filteredExpenses);\n  const dataSource = createCategoryDataSource(categorizedExpenses, categories);\n\n  return <Table columns={columns} dataSource={dataSource} />;\n}\n","export const columns = [\n  {\n    title: 'Tag',\n    dataIndex: 'tag',\n    key: 'tag',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount',\n    key: 'amount',\n  },\n];\n","import { TagList, Expense } from '../../../types/model';\n\nexport const groupExpensesByTag = (\n  expenses: Expense[],\n): { [key: number]: number } => {\n  return expenses.reduce(\n    (memo: { [tagId: number]: number }, { tagIds, amount }: Expense) => {\n      return tagIds.reduce(\n        (groupedExpenses: { [tagId: number]: number }, tagId: number) => {\n          return {\n            ...groupedExpenses,\n            [tagId]: groupedExpenses[tagId]\n              ? groupedExpenses[tagId] + amount\n              : amount,\n          };\n        },\n        memo,\n      );\n    },\n    {},\n  );\n};\n\ntype TagDataItem = { key: number } & {\n  amount: number;\n  tag: string;\n};\n\nexport const createTagDataSource = (\n  categorizedExpenses: {\n    [key: number]: number;\n  },\n  tags: TagList,\n): TagDataItem[] =>\n  Object.entries(categorizedExpenses).map(([tagId, amount]) => {\n    const tag = tags.byIds[Number(tagId)];\n    return {\n      amount,\n      key: Number(tagId),\n      tag: tag ? tag.name : '',\n    };\n  });\n","import React from 'react';\nimport Table from './TableComponent';\nimport { State } from '../../store/initialState';\nimport { useSelector } from 'react-redux';\nimport { columns } from './column-configurations/tag';\nimport { groupExpensesByTag, createTagDataSource } from './helpers/tag';\nimport { filterExpenses } from './helpers/common';\n\nexport default function Container() {\n  const { tags, expenses, selectedAccount, selectedPeriod } = useSelector(\n    ({ tags, expenses, selectedAccount, selectedPeriod }: State) => ({\n      tags,\n      expenses,\n      selectedAccount,\n      selectedPeriod,\n    }),\n  );\n\n  const filteredExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const categorizedExpenses = groupExpensesByTag(\n    Object.values(filteredExpenses),\n  );\n  \n  const dataSource = createTagDataSource(categorizedExpenses, tags);\n\n  return <Table columns={columns} dataSource={dataSource} />;\n}\n","import React from 'react';\nimport { FormElementProps } from '../../../types/form';\nimport { SingleSelectComponent } from '../../select';\n\ntype CreateAndSelectAccountProps = {\n  account: FormElementProps;\n};\n\nexport default function SelectAccountComponent({\n  account,\n}: CreateAndSelectAccountProps) {\n  return (\n    <SingleSelectComponent\n      options={account.options}\n      selected={account.selected}\n      handleSelect={account.onChange}\n    />\n  );\n}\n","import React, { SetStateAction, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { message } from 'antd';\nimport SelectAccountComponent from './SelectAccountComponent';\nimport * as accountActionCreators from '../../../store/account/actions';\nimport { State } from '../../../store/initialState';\n\nexport default function SelectAccountContainer() {\n  const { selectedAccount, accountList } = useSelector(\n    ({ selectedAccount, accountList }: State) => ({\n      selectedAccount,\n      accountList,\n    }),\n  );\n  const dispatch = useDispatch();\n  const { selectAccount } = bindActionCreators(accountActionCreators, dispatch);\n  const handleAccountSelect = (id: SetStateAction<string>) =>\n    selectAccount(accountList[Number(id)]);\n\n  useEffect(() => {\n    if (selectedAccount) {\n      message.info(`${selectedAccount.name} is now the default account.`);\n    }\n  }, [selectedAccount]);\n\n  const account = {\n    options: Object.values(accountList),\n    selected: selectedAccount.id,\n    onChange: handleAccountSelect,\n  };\n\n  return <SelectAccountComponent account={account} />;\n}\n","import React from 'react';\nimport { FormElementProps } from '../../../types/form';\nimport { SingleSelectComponent } from '../../select';\n\ntype CreateAndSelectAccountProps = {\n  period: FormElementProps;\n};\n\nexport default function SelectPeriodComponent({\n  period,\n}: CreateAndSelectAccountProps) {\n  return (\n    <SingleSelectComponent\n      options={period.options}\n      selected={period.selected}\n      handleSelect={period.onChange}\n    />\n  );\n}\n","import { Period } from '../../types/model';\n\nexport const SELECT_PERIOD = 'SELECT_PERIOD';\n\ninterface SelectPeriodAction {\n  type: typeof SELECT_PERIOD;\n  period: Period;\n}\n\nexport type PeriodActionTypes = SelectPeriodAction;\n","import { SELECT_PERIOD } from './types';\nimport { Period } from '../../types/model';\n\nexport const selectPeriod = (period: Period) => ({\n  type: SELECT_PERIOD,\n  period,\n});\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SelectPeriodComponent from './SelectPeriodComponent';\nimport * as periodActionCreators from '../../../store/period/actions';\nimport { State } from '../../../store/initialState';\n\nexport default function SelectAccountContainer() {\n  const { selectedPeriod, periodList } = useSelector(\n    ({ selectedPeriod, periodList }: State) => ({\n      selectedPeriod,\n      periodList,\n    }),\n  );\n  const dispatch = useDispatch();\n  const { selectPeriod } = bindActionCreators(periodActionCreators, dispatch);\n  const handlePeriodSelect = (id: number) => {\n    console.log(typeof id);\n    console.log(id);\n    console.log(periodList);\n\n    selectPeriod(periodList[id]);\n  };\n\n  const period = {\n    options: Object.values(periodList),\n    selected: selectedPeriod.id,\n    onChange: handlePeriodSelect,\n  };\n\n  return <SelectPeriodComponent period={period} />;\n}\n","import { Expense } from '../../../types/model';\n\nexport const sumExpenses = (expenseArray: Expense[]): number =>\n  expenseArray.reduce((sum, { amount }) => sum + amount, 0);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../store/initialState';\nimport { filterExpensesByAccount } from '../tables/helpers/common';\nimport { sumExpenses } from './utils';\n\nexport default function Balance() {\n  const { expenses, selectedAccount } = useSelector(\n    ({ expenses, selectedAccount }: State) => ({\n      expenses,\n      selectedAccount,\n    }),\n  );\n\n  const accountExpenses = filterExpensesByAccount(\n    Object.values(expenses),\n    selectedAccount.id,\n  );\n\n  const balance = sumExpenses(accountExpenses);\n\n  return <h1>{`${balance} Ft`}</h1>;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../store/initialState';\nimport { filterExpenses } from '../tables/helpers/common';\nimport { sumExpenses } from './utils';\nimport { Align } from '../ui';\n\nexport default function MoneyFlow() {\n  const { expenses, selectedAccount, selectedPeriod } = useSelector(\n    ({ expenses, selectedAccount, selectedPeriod }: State) => ({\n      expenses,\n      selectedAccount,\n      selectedPeriod,\n    }),\n  );\n\n  const accountExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const moneyFlow = sumExpenses(accountExpenses);\n\n  return (\n    <Align>\n      <h2>{`${moneyFlow} Ft`}</h2>\n      <span>{selectedPeriod.name}</span>\n    </Align>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport AllExpenses from '../components/tables/ExpenseTableContainer';\nimport ExpensesByCategory from '../components/tables/CategoryTableContainer';\nimport ExpensesByTags from '../components/tables/TagTableContainer';\nimport SelectAccountContainer from '../components/dropdowns/account/SelectAccountContainer';\nimport SelectPeriodContainer from '../components/dropdowns/period/SelectPeriodContainer';\nimport Balance from '../components/readonly/Balance';\nimport MoneyFlow from '../components/readonly/MoneyFlow';\nimport { Card, Center, Align } from '../components/ui';\nimport WithHeading from '../components/enhancer/WithHeading';\nimport { Tabs } from 'antd';\n\nconst { TabPane } = Tabs;\n\nexport default function PresenterComponent() {\n  return (\n    <SplitView>\n      <Tabs type=\"card\">\n        <TabPane tab=\"All Expenses\" key=\"1\">\n          <Card>\n            <WithHeading title={'All Expenses'}>\n              <AllExpenses />\n            </WithHeading>\n          </Card>\n        </TabPane>\n        <TabPane tab=\"Expenses by Categories\" key=\"2\">\n          <Card>\n            <WithHeading title={'Expenses by Categories'}>\n              <ExpensesByCategory />\n            </WithHeading>\n          </Card>\n        </TabPane>\n        <TabPane tab=\"Expenses by Tags\" key=\"3\">\n          <Card>\n            <WithHeading title={'Expenses by Tags'}>\n              <ExpensesByTags />\n            </WithHeading>\n          </Card>\n        </TabPane>\n      </Tabs>\n      <Center>\n        <Align type=\"vertical\">\n          <Card>\n            <WithHeading title={'Current Balance'}>\n              <Balance />\n            </WithHeading>\n          </Card>\n          <Card>\n            <WithHeading title={'Money Flow'}>\n              <MoneyFlow />\n            </WithHeading>\n          </Card>\n          <Card>\n            <WithHeading title={'Select Account'}>\n              <SelectAccountContainer></SelectAccountContainer>\n            </WithHeading>\n          </Card>\n          <Card>\n            <WithHeading title={'Select Period'}>\n              <SelectPeriodContainer />\n            </WithHeading>\n          </Card>\n        </Align>\n      </Center>\n    </SplitView>\n  );\n}\n\nconst SplitView = styled.div`\n  display: grid;\n  grid-template-columns: 60% 40%;\n`;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Expense, Tag, Account, Dashboard } from '../screens';\nimport { spaces, headerSize } from '../consts';\n\nexport default function MainComponent(): JSX.Element {\n  return (\n    <Main>\n      <Switch>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/expense\" component={Expense} />\n        <Route path=\"/tag\" component={Tag} />\n        <Route path=\"/account\" component={Account} />\n      </Switch>\n    </Main>\n  );\n}\n\nconst Main = styled.main`\n  padding: calc(${headerSize} + 1rem) ${spaces.m} 1rem;\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './layout/Header';\nimport Main from './layout/Main';\nimport styled from 'styled-components';\nimport { message } from 'antd';\n\nmessage.config({\n  top: 60,\n  duration: 2,\n});\n\nconst App = styled.div`\n  background-color: rgb(224, 223, 223);\n  height: inherit;\n`;\nexport default function AppComponent(): JSX.Element {\n  return (\n    <App>\n      <BrowserRouter>\n        <Header />\n        <Main />\n      </BrowserRouter>\n    </App>\n  );\n}\n","import { generateArray, generateObject, objectify } from '../utils';\nimport {\n  CategoryList,\n  TagList,\n  ExpenseList,\n  AccountList,\n  PeriodList,\n} from '../types/model';\n\nexport const categories: CategoryList = generateArray(10, 'Category');\nexport const tagArray = generateArray(10, 'Tag');\nexport const tags: TagList = {\n  byIds: objectify(tagArray, 'id'),\n  byNames: objectify(tagArray, 'name'),\n};\n\nexport const accountList: AccountList = generateObject(10, 'Account');\n\nconst DAY_IN_MINUTES = 24 * 60;\nconst WEEK_IN_MINUTES = 7 * DAY_IN_MINUTES;\nexport const MONTH_IN_MINUTES = 30 * DAY_IN_MINUTES;\nconst YEAR_IN_MINUTES = 365 * DAY_IN_MINUTES;\n\nconst createDate = (differenceInMinutes: number): Date => {\n  const tempDate = new Date();\n  tempDate.setMinutes(tempDate.getMinutes() + differenceInMinutes);\n  return tempDate;\n}\nexport const periodList: PeriodList = objectify([\n  { id: DAY_IN_MINUTES, name: 'Last day' },\n  { id: WEEK_IN_MINUTES, name: 'Last 7 days' },\n  { id: MONTH_IN_MINUTES, name: 'Last 30 days' },\n  { id: YEAR_IN_MINUTES, name: 'Last 365 days' },\n  { id: -1, name: 'Full history' },\n]);\n\nexport const expenses: ExpenseList = objectify(\n  [\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: 25000, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: 200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: 500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: 2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: 600, createdTs: createDate(-1 * DAY_IN_MINUTES * 4), categoryId: 4, accountId: 4, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 6), categoryId: 6, accountId: 6, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 7), categoryId: 7, accountId: 7, tagIds: [0] },\n    { amount: 100, createdTs: createDate(-1 * DAY_IN_MINUTES * 6), categoryId: 6, accountId: 6, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 5), categoryId: 5, accountId: 5, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 7), categoryId: 7, accountId: 7, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [2, 3, 4] },\n    { amount: 2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 9), categoryId: 9, accountId: 9, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [1] },\n    { amount: 6000, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 9), categoryId: 9, accountId: 9, tagIds: [3] },\n    { amount: 500, createdTs: createDate(-1 * DAY_IN_MINUTES * 7), categoryId: 7, accountId: 7, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 5), categoryId: 5, accountId: 5, tagIds: [2, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: 300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: 600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: 500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: 1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [1, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: 300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: 5000, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 6, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [4, 3, 2] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n  ].map((x, id) => ({ ...x, id })),\n);\n","import {\n  categories,\n  tags,\n  expenses,\n  accountList,\n  periodList,\n  MONTH_IN_MINUTES,\n} from '../assets';\nimport {\n  CategoryList,\n  TagList,\n  ExpenseList,\n  Account,\n  AccountList,\n  Period,\n  PeriodList,\n} from '../types/model';\n\n// TODO: move effects to somewhere else\n\nexport type State = {\n  selectedAccount: Account;\n  selectedPeriod: Period;\n  periodList: PeriodList;\n  accountList: AccountList;\n  categories: CategoryList;\n  tags: TagList;\n  expenses: ExpenseList;\n};\n\nconst selectedAccount = Object.values(accountList)[0];\nconst selectedPeriod = periodList[MONTH_IN_MINUTES];\n\nconst initialState: State = {\n  selectedPeriod,\n  selectedAccount,\n  periodList,\n  accountList,\n  categories,\n  tags,\n  expenses,\n};\n\nexport default initialState;\n","import initialState, { State } from './initialState';\n\nimport { accountReducer } from './account/reducer';\nimport { tagReducer } from './tag/reducer';\nimport { expenseReducer } from './expense/reducer';\nimport { periodReducer } from './period/reducer';\n\nconst reducers = [accountReducer, tagReducer, expenseReducer, periodReducer];\n\n// the reducer is called whenever a dispatch action is made.\n// the action.type is a string which maps to a function in Actions.\n// We apply the update to existing state, and return a new copy of state.\nconst rootReducer = (state: State = initialState, action: any): State => {\n  const update = reducers.reduce(\n    (previousState, reducer) => reducer(previousState, action),\n    state,\n  );\n  return { ...state, ...update };\n};\n\nexport default rootReducer;\n","import { SELECT_ACCOUNT, CREATE_ACCOUNT, AccountActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function accountReducer(\n  state: State,\n  { type, account }: AccountActionTypes,\n) {\n  switch (type) {\n    case SELECT_ACCOUNT:\n      return {\n        ...state,\n        selectedAccount: account,\n      };\n    case CREATE_ACCOUNT:\n      return {\n        ...state,\n        selectedAccount: account,\n        accountList: {\n          ...state.accountList,\n          [account.id]: account,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { CREATE_TAG, TagActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function tagReducer(state: State, { type, tag }: TagActionTypes) {\n  switch (type) {\n    case CREATE_TAG:\n      return {\n        ...state,\n        tags: { ...state.tags, [tag.id]: tag },\n      };\n    default:\n      return state;\n  }\n}\n","import { CREATE_EXPENSE, ExpenseActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function expenseReducer(\n  state: State,\n  { type, expense }: ExpenseActionTypes,\n) {\n  switch (type) {\n    case CREATE_EXPENSE:\n      return {\n        ...state,\n        expenses: {\n          ...state.expenses,\n          [expense.id]: expense,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { SELECT_PERIOD, PeriodActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function periodReducer(\n  state: State,\n  { type, period }: PeriodActionTypes,\n) {\n  switch (type) {\n    case SELECT_PERIOD:\n      return {\n        ...state,\n        selectedPeriod: period,\n      };\n\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/rootReducer';\n\nconst store = createStore(rootReducer);\nconsole.log('store');\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}