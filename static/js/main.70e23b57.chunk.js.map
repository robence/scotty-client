{"version":3,"sources":["consts/index.ts","components/ui/Logo.tsx","layout/Header.tsx","components/ui/Card.tsx","components/ui/Center.tsx","components/ui/Align.tsx","components/enhancer/WithHeading.tsx","components/enhancer/WithTitle.tsx","components/select/RadioGroupComponent.tsx","components/select/SingleSelectComponent.tsx","components/select/MultiSelectComponent.tsx","components/forms/expense/CreateExpenseFormComponent.tsx","store/expense/types.ts","store/expense/actions.ts","store/account/types.ts","store/account/actions.ts","utils/index.ts","components/forms/expense/CreateExpenseFormContainer.tsx","components/forms/hooks/useTags.ts","components/forms/hooks/useRadio.ts","components/forms/hooks/useCategory.ts","components/forms/hooks/useAmount.ts","components/readonly/Expense.tsx","components/list/common-expenses/CommonExpensesListItem.tsx","components/list/common-expenses/CommonExpensesList.tsx","components/tables/helpers/common.ts","components/list/common-expenses/utils/index.ts","components/list/common-expenses/CommonExpensesListContainer.tsx","screens/Expense.tsx","components/forms/tag/Label.tsx","components/forms/tag/CreateTagFormComponent.tsx","store/tag/types.ts","store/tag/actions.ts","components/forms/tag/CreateTagFormContainer.tsx","screens/NewTag.tsx","components/forms/account/CreateAndSelectAccountFormComponent.tsx","components/forms/account/CreateAndSelectAccountFormContainer.tsx","screens/Account.tsx","components/tables/TableComponent.tsx","components/tables/column-configurations/expense.tsx","components/tables/helpers/expense.ts","components/tables/ExpenseTableContainer.tsx","components/tables/column-configurations/category.tsx","components/tables/helpers/category.ts","components/tables/CategoryTableContainer.tsx","components/tables/column-configurations/tag.tsx","components/tables/helpers/tag.ts","components/tables/TagTableContainer.tsx","components/redux-dropdowns/SelectAccountContainer.tsx","store/period/types.ts","store/period/actions.ts","components/redux-dropdowns/SelectPeriodContainer.tsx","components/readonly/utils/index.ts","components/readonly/Balance.tsx","components/readonly/MoneyFlow.tsx","screens/Dashboard.tsx","layout/Main.tsx","App.tsx","assets/index.ts","store/initialState.ts","store/rootReducer.ts","store/account/reducer.ts","store/tag/reducer.ts","store/expense/reducer.ts","store/period/reducer.ts","index.tsx"],"names":["spaces","LogoComponent","Logo","styled","h2","HeaderComponent","Header","StyledNavLink","to","header","NavLink","CardComponent","children","width","Card","div","CenteredComponent","Center","AlignComponent","type","content","Align","Container","Hr","hr","WithTitleComponent","title","RadioGroupComponent","selected","handleSelect","options","Group","value","onChange","map","id","name","Button","key","SingleSelectComponent","props","style","Option","MultiSelectComponent","placeholder","mode","CreateExpenseComponent","category","tag","radio","account","handleSubmit","amount","unsignedAmount","handleAmount","Expense","StyledInput","onClick","Input","CREATE_EXPENSE","createExpense","expense","SELECT_ACCOUNT","CREATE_ACCOUNT","createAccount","selectAccount","objectify","list","prop","reduce","memo","acc","generateArray","size","Array","fill","_","genId","from","Math","floor","random","CreateExpenseFormContainer","useSelector","accountList","categories","tags","selectedAccount","dispatch","useDispatch","bindActionCreators","expenseActionCreators","accountActionCreators","accountOptions","Object","values","useState","tagNames","setTagNames","filteredTagOptions","byIds","filter","includes","newSelection","useTags","radioId","setRadio","e","target","useRadio","categoryId","setCategory","useCategory","setAmount","input","Number","slice","isNaN","useAmount","tagIds","byNames","signedAmount","newExpense","accountId","createdTs","Date","item","Inline","color","toUpperCase","CommonExpensesList","dataSource","itemLayout","renderItem","Item","filterExpensesByAccount","expenses","filterExpenses","periodId","x","startPeriod","setMinutes","getMinutes","filterExpensesByPeriod","groupCommonExpenses","groupedExpenses","join","count","groupCommonExpenseIdsByCount","entries","countReferences","sortExpenseIdsByCount","keys","num","sort","a","b","reverse","CommonExpensesListContainer","accountExpenses","expenseIdsByCount","mostCommonExpenseList","tagId","ExpenseComponent","Label","label","LabelComponent","CreateTagFormComponent","tagExists","handleChange","disabled","marginRight","allowClear","filterOption","inputValue","option","indexOf","CREATE_TAG","createTag","CreateTagFormContainer","tagActionCreators","setInput","message","success","CreateAndSelectAccountFormComponent","loading","accountExists","handleCreate","CreateAndSelectAccountFormContainer","undefined","find","selectDisabled","useEffect","info","accountSelected","TableComponent","columns","pagination","pageSize","scroll","y","dataIndex","render","length","createExpenseDataSource","created","toDateString","selectedPeriod","filteredExpenses","groupExpensesByCategory","createCategoryDataSource","categorizedExpenses","groupExpensesByTag","createTagDataSource","SelectAccountContainer","SELECT_PERIOD","selectPeriod","period","SelectPeriodContainer","periodList","periodActionCreators","sumExpenses","expenseArray","sum","Balance","balance","MoneyFlow","moneyFlow","TabPane","Tabs","PresenterComponent","tab","MainComponent","Main","path","exact","component","Dashboard","Tag","Account","main","config","top","duration","App","tagArray","createDate","differenceInMinutes","tempDate","initialState","reducers","state","rootReducer","action","update","previousState","reducer","store","createStore","console","log","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70e23b57.chunk.js","sourcesContent":["export const colors = {\n  primary: '#1890ff',\n};\n\nexport const spaces = {\n  xxs: '0.2rem',\n  xs: '0.4rem',\n  s: '0.8rem',\n  m: '1.2rem',\n  l: '1.6rem',\n  xl: '3.2rem',\n};\n\nexport const headerSize = '4.8rem';\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function LogoComponent(): JSX.Element {\n  return <Logo>Scooty Wallet</Logo>;\n}\n\nconst Logo = styled.h2`\n  margin: 0 calc(12vw - 5rem) 0 5vw;\n  white-space: nowrap;\n  user-select: none;\n  cursor: pointer;\n  width: min-content;\n  color: white;\n  font-weight: bolder;\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { colors, spaces, headerSize } from '../consts';\nimport Logo from '../components/ui/Logo';\n\nexport default function HeaderComponent() {\n  return (\n    <Header>\n      <Logo />\n      <StyledNavLink to=\"/\">Dashboard</StyledNavLink>\n      <StyledNavLink to=\"/expense\">New Transaction</StyledNavLink>\n      <StyledNavLink to=\"/tag\">New Tag</StyledNavLink>\n      <StyledNavLink to=\"/account\">New Account</StyledNavLink>\n    </Header>\n  );\n}\n\nconst Header = styled.header`\n  height: ${headerSize};\n  width: 100%;\n  background-color: ${colors.primary};\n\n  display: flex;\n  align-items: center;\n\n  position: fixed;\n  z-index: 2;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  flex-shrink: 0;\n  font-weight: 700;\n  font-size: 1.8rem;\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: none;\n  border-radius: ${spaces.xs};\n  margin: 0 ${spaces.s};\n  padding: ${spaces.xs};\n  :hover {\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { spaces } from '../../consts';\n\ntype CardProps = {\n  children: JSX.Element;\n} & StyledProps;\n\ntype StyledProps = {\n  width?: string;\n};\n\nexport default function CardComponent({\n  children,\n  width,\n}: CardProps): JSX.Element {\n  return <Card width={width}>{children}</Card>;\n}\n\nconst Card = styled.div`\n  min-width: 300px;\n  height: fit-content;\n  width: ${({ width }: StyledProps) => width || 'fit-content'};\n\n  margin: ${spaces.l};\n  background-color: white;\n  padding: ${spaces.l};\n  box-shadow: 0 ${spaces.xs} ${spaces.s} 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  border-radius: ${spaces.s};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype CenterProps = {\n  children: JSX.Element;\n};\n\nexport default function CenteredComponent({ children }: CenterProps) {\n  return <Center>{children}</Center>;\n}\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype AlignType = 'horizontal' | 'vertical';\ntype ContentType = 'between' | 'evenly';\n\ntype StyledProps = {\n  type?: AlignType;\n  content?: ContentType;\n};\n\ntype AlignProps = {\n  children: JSX.Element[];\n} & StyledProps;\n\nexport default function AlignComponent({\n  children,\n  type = 'horizontal',\n  content = 'between',\n}: AlignProps) {\n  return (\n    <Align type={type} content={content}>\n      {children}\n    </Align>\n  );\n}\n\nconst Align = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: ${({ content }: StyledProps) =>\n    content === 'evenly' ? 'space-evenly' : 'space-between'};\n\n  flex-direction: ${({ type }: StyledProps) =>\n    type === 'vertical' ? 'column' : 'row'};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { spaces } from '../../consts/index';\n\ntype WithHeadingType = {\n  title: string;\n  children: JSX.Element;\n};\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst Hr = styled.hr`\n  margin-bottom: ${spaces.m};\n`;\n\nexport default function WithTitleComponent({\n  title,\n  children,\n}: WithHeadingType) {\n  return (\n    <Container>\n      <h2>{title}</h2>\n      <Hr />\n      {children}\n    </Container>\n  );\n}\n","import React from 'react';\n\ntype WithTitleType = {\n  title: string;\n  children: JSX.Element;\n};\n\nexport default function WithTitleComponent({ title, children }: WithTitleType) {\n  return (\n    <div>\n      <h3>{title}</h3>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Radio } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport { IdNameTuple } from '../../types/form';\n\ntype PresenterType = {\n  selected: string | number | string[];\n  options: IdNameTuple[];\n  handleSelect: (e: RadioChangeEvent) => void;\n};\n\nexport default function RadioGroupComponent({\n  selected,\n  handleSelect,\n  options,\n}: PresenterType) {\n  return (\n    <Radio.Group value={selected} onChange={handleSelect}>\n      {options.map(({ id, name }) => (\n        <Radio.Button key={id} value={id}>\n          {name}\n        </Radio.Button>\n      ))}\n    </Radio.Group>\n  );\n}\n","import React, { SetStateAction } from 'react';\nimport { Select } from 'antd';\nimport { IdNameTuple } from '../../types/form';\n\ntype PresenterProps = {\n  props: {\n    selected: string;\n    options: IdNameTuple[];\n    onChange: (e: SetStateAction<string>) => void;\n  };\n};\nexport default function SingleSelectComponent({\n  props: { selected, options, onChange },\n}: PresenterProps) {\n  return (\n    <Select value={selected} onChange={onChange} style={{ width: '100%' }}>\n      {options.map(({ id, name }) => (\n        <Select.Option key={id} value={id}>\n          {name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n","import React from 'react';\nimport { Select } from 'antd';\nimport { IdNameTuple } from '../../types/form';\n\ntype PresenterType = {\n  selected: string[];\n  options: IdNameTuple[];\n  handleSelect: (e: string[]) => void;\n  placeholder: string;\n};\n\nexport default function MultiSelectComponent({\n  selected,\n  options,\n  handleSelect,\n  placeholder,\n}: PresenterType) {\n  return (\n    <Select\n      mode=\"multiple\"\n      placeholder={placeholder}\n      value={selected}\n      onChange={handleSelect}\n      style={{ width: '100%' }}\n    >\n      {options.map(({ id, name }) => (\n        <Select.Option key={id} value={name}>\n          {name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport styled from 'styled-components';\nimport { Button, Input } from 'antd';\nimport {\n  RadioGroupComponent,\n  SingleSelectComponent,\n  MultiSelectComponent,\n} from '../../select';\nimport { FormElementProps } from '../../../types/form';\nimport { WithTitle } from '../../enhancer';\nimport { spaces } from '../../../consts';\n\ntype CreateExpenseFormProps = {\n  category: FormElementProps;\n  tag: FormElementProps;\n  radio: FormElementProps;\n  account: FormElementProps;\n  amount: {\n    unsignedAmount: number;\n    handleAmount: (e: ChangeEvent<HTMLInputElement>) => void;\n  };\n  handleSubmit: () => void;\n};\n\nexport default function CreateExpenseComponent({\n  category,\n  tag,\n  radio,\n  account,\n  handleSubmit,\n  amount: { unsignedAmount, handleAmount },\n}: CreateExpenseFormProps) {\n  return (\n    <Expense>\n      <WithTitle title={'Amount'}>\n        <RadioGroupComponent\n          selected={radio.selected}\n          options={radio.options}\n          handleSelect={radio.onChange}\n        />\n      </WithTitle>\n\n      <StyledInput\n        value={`${radio.selected} ${unsignedAmount}`}\n        onChange={handleAmount}\n        placeholder=\"Enter amount\"\n      />\n\n      <WithTitle title={'Category'}>\n        <SingleSelectComponent props={category} />\n      </WithTitle>\n\n      <WithTitle title={'Tags'}>\n        <MultiSelectComponent\n          options={tag.options}\n          selected={tag.selected}\n          handleSelect={tag.onChange}\n          placeholder=\"Select tags\"\n        />\n      </WithTitle>\n\n      <WithTitle title={'Account'}>\n        <SingleSelectComponent props={account} />\n      </WithTitle>\n\n      <Button type=\"primary\" onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Expense>\n  );\n}\n\nconst Expense = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  div + div,\n  button {\n    margin-top: ${spaces.m};\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  margin: ${spaces.s} 0;\n`;\n","import { Expense } from '../../types/model';\n\nexport const CREATE_EXPENSE = 'CREATE_EXPENSE';\n\ninterface CreateExpenseAction {\n  type: typeof CREATE_EXPENSE;\n  expense: Expense;\n}\n\nexport type ExpenseActionTypes = CreateExpenseAction;\n","import { CREATE_EXPENSE } from './types';\nimport { Expense } from '../../types/model';\n\nexport const createExpense = (expense: Expense) => ({\n  type: CREATE_EXPENSE,\n  expense,\n});\n","import { Account } from '../../types/model';\n\nexport const SELECT_ACCOUNT = 'SELECT_ACCOUNT';\nexport const CREATE_ACCOUNT = 'CREATE_ACCOUNT';\n\ninterface SelectAccountAction {\n  type: typeof SELECT_ACCOUNT;\n  account: Account;\n}\n\ninterface CreateAccountAction {\n  type: typeof CREATE_ACCOUNT;\n  account: Account;\n}\n\nexport type AccountActionTypes = SelectAccountAction | CreateAccountAction;\n","import { CREATE_ACCOUNT, SELECT_ACCOUNT } from './types';\nimport { Account } from '../../types/model';\n\nexport const createAccount = (account: Account) => ({\n  type: CREATE_ACCOUNT,\n  account,\n});\n\nexport const selectAccount = (account: Account) => ({\n  type: SELECT_ACCOUNT,\n  account,\n});\n","export const objectify = (list: any, prop = 'id') => {\n  return list.reduce(\n    (memo: { [key: number]: any }, acc: any) => ({\n      ...memo,\n      [acc[prop]]: acc,\n    }),\n    {},\n  );\n};\n\nexport const generateArray = (size: number, name: string) =>\n  Array(size)\n    .fill(null)\n    .map((_, id) => ({ id, name: `${name}${id + 1}` }));\n\nexport const generateObject = (\n  size: number,\n  name: string,\n): { [key: string]: any } => objectify(generateArray(size, name));\n\nexport const genId = (from: number) =>\n  Math.floor(Math.random() * 999 + from + 1);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CreateExpenseFormComponent from './CreateExpenseFormComponent';\nimport { State } from '../../../store/initialState';\nimport * as expenseActionCreators from '../../../store/expense/actions';\nimport * as accountActionCreators from '../../../store/account/actions';\nimport { useRadio, useCategory, useTags, useAmount } from '../hooks';\nimport { genId } from '../../../utils';\n\nexport default function CreateExpenseFormContainer() {\n  const { categories, tags, accountList, selectedAccount } = useSelector(\n    ({ accountList, categories, tags, selectedAccount }: State) => ({\n      categories,\n      tags,\n      accountList,\n      selectedAccount,\n    }),\n  );\n\n  const dispatch = useDispatch();\n  const { createExpense, selectAccount } = bindActionCreators(\n    { ...expenseActionCreators, ...accountActionCreators },\n    dispatch,\n  );\n\n  const accountOptions = Object.values(accountList);\n  const handleAccountSelect = (id: number) => selectAccount(accountList[id]);\n\n  const tag = useTags(tags);\n  const radio = useRadio();\n  const category = useCategory(categories);\n  const amount = useAmount();\n\n  const account = {\n    selected: selectedAccount.id,\n    options: accountOptions,\n    onChange: handleAccountSelect,\n  };\n\n  const handleSubmit = () => {\n    const tagIds = tag.selected.map((name: string) => tags.byNames[name].id);\n    const signedAmount =\n      radio.selected === '-'\n        ? amount.unsignedAmount * -1\n        : amount.unsignedAmount;\n\n    const newExpense = {\n      id: genId(100),\n      amount: signedAmount,\n      categoryId: category.selected,\n      accountId: selectedAccount.id,\n      tagIds,\n      createdTs: new Date(),\n    };\n    createExpense(newExpense);\n  };\n\n  return (\n    <CreateExpenseFormComponent\n      category={category}\n      account={account}\n      tag={tag}\n      radio={radio}\n      amount={amount}\n      handleSubmit={handleSubmit}\n    />\n  );\n}\n","import { useState } from 'react';\nimport { FormElementProps } from '../../../types/form';\nimport { TagList } from '../../../types/model';\n\nexport default function useTags(tags: TagList): FormElementProps {\n  const [tagNames, setTagNames] = useState([] as string[]);\n\n  const tagOptions = Object.values(tags.byIds);\n  const filteredTagOptions = tagOptions.filter(\n    ({ name }) => !tagNames.includes(name),\n  );\n\n  const handleTagSelect = (newSelection: string[]) => setTagNames(newSelection);\n\n  return {\n    selected: tagNames,\n    options: filteredTagOptions,\n    onChange: handleTagSelect,\n  };\n}\n","import { useState } from 'react';\nimport { RadioChangeEvent } from 'antd/lib/radio/interface';\nimport { FormElementProps } from '../../../types/form';\n\nexport default function useRadio(): FormElementProps {\n  const radioOptions = [\n    { id: '-', name: 'Expense' },\n    { id: '+', name: 'Income' },\n  ];\n  const [radioId, setRadio] = useState('-');\n  const handleRadioSelect = (e: RadioChangeEvent) => setRadio(e.target.value);\n\n  return {\n    selected: radioId,\n    options: radioOptions,\n    onChange: handleRadioSelect,\n  };\n}\n","import { useState } from 'react';\nimport { CategoryList } from '../../../types/model';\nimport { FormElementProps } from '../../../types/form';\n\nexport default function useCategory(\n  categories: CategoryList,\n): FormElementProps {\n  const [categoryId, setCategory] = useState(categories[0].id);\n  const categoryOptions = Object.values(categories);\n  const handleCategorySelect = (id: number) => setCategory(id);\n\n  return {\n    selected: categoryId,\n    options: categoryOptions,\n    onChange: handleCategorySelect,\n  };\n}\n","import { ChangeEvent, useState } from 'react';\n\nexport default function useAmount(): {\n  unsignedAmount: number;\n  handleAmount: (e: ChangeEvent<HTMLInputElement>) => void;\n} {\n  const [unsignedAmount, setAmount] = useState(0);\n\n  // removes sign and extra space\n  // input value is bound to the amount variable which is number\n  const handleAmount = (e: ChangeEvent<HTMLInputElement>) => {\n    const input = Number(e.target.value.slice(2));\n    if (!Number.isNaN(input)) setAmount(Number(e.target.value.slice(2)));\n  };\n\n  return {\n    unsignedAmount,\n    handleAmount,\n  };\n}\n","import React from 'react';\nimport { ExpensePopulated } from '../../types/model';\nimport { Tag } from 'antd';\nimport styled from 'styled-components';\n\nexport default function Expense({\n  item: { amount, category, tags },\n}: {\n  item: ExpensePopulated;\n}) {\n  return (\n    <Inline>\n      <h2>{amount}</h2>\n      <h3>{category.name}</h3>\n      <div>\n        {tags.map(({name, id}) => (\n          <Tag color=\"blue\" key={id}>\n            {name.toUpperCase()}\n          </Tag>\n        ))}\n      </div>\n    </Inline>\n  );\n}\n\nconst Inline = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n`;\n","import React from 'react';\nimport { Button } from 'antd';\nimport { Align } from '../../ui';\nimport { ExpensePopulated } from '../../../types/model';\nimport Expense from '../../readonly/Expense';\n\nexport default function CommonExpensesList({\n  item,\n  onClick,\n}: {\n  item: ExpensePopulated;\n  onClick: () => void;\n}) {\n  return (\n    <Align>\n      <Expense item={item}></Expense>\n      <Button color=\"blue\" onClick={onClick}>\n        Add\n      </Button>\n    </Align>\n  );\n}\n","import React from 'react';\nimport { List } from 'antd';\nimport CommonExpensesListItem from './CommonExpensesListItem';\nimport { ExpensePopulated } from '../../../types/model';\n\ntype CommonExpensesListProps = {\n  dataSource: ExpensePopulated[];\n  onClick: (item: ExpensePopulated) => () => void;\n};\n\nexport default function CommonExpensesList({\n  dataSource,\n  onClick,\n}: CommonExpensesListProps) {\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={dataSource}\n      renderItem={(item) => (\n        <List.Item>\n          <CommonExpensesListItem item={item} onClick={onClick(item)} />\n        </List.Item>\n      )}\n    />\n  );\n}\n","import { Expense } from '../../../types/model';\n\nexport const filterExpensesByAccount = (\n  expenses: Expense[],\n  id: number,\n): Expense[] => expenses.filter(({ accountId }) => accountId === id);\n\nconst filterExpensesByPeriod = (\n  expenses: Expense[],\n  startPeriod: Date,\n): Expense[] => {\n  return expenses.filter(({ createdTs }) => createdTs > startPeriod);\n};\n\nexport const filterExpenses = (\n  expenses: Expense[],\n  accountId: number,\n  periodId: number,\n): Expense[] => {\n  const x = filterExpensesByAccount(expenses, accountId);\n\n  if (periodId === -1) {\n    return x;\n  }\n\n  const startPeriod = new Date();\n  startPeriod.setMinutes(startPeriod.getMinutes() - periodId);\n\n  const y = filterExpensesByPeriod(x, startPeriod);\n  return y;\n};\n","import { Expense } from '../../../../types/model';\n\nexport type ExpensesByCount = { [count: number]: string[] };\nexport type GroupedCommonExpenses = {\n  [id: string]: {\n    count: number;\n    expense: { amount: number; categoryId: number; tagIds: number[] };\n  };\n};\n\nexport const groupCommonExpenses = (\n  expenses: Expense[],\n): GroupedCommonExpenses =>\n  expenses.reduce(\n    (\n      groupedExpenses: GroupedCommonExpenses,\n      { amount, categoryId, tagIds }: Expense,\n    ) => {\n      const id = `${categoryId}-${amount}-${tagIds.join(',')}`;\n\n      return {\n        ...groupedExpenses,\n        [id]: {\n          count:\n            groupedExpenses[id] && groupedExpenses[id].count\n              ? groupedExpenses[id].count + 1\n              : 1,\n          expense: {\n            amount,\n            categoryId,\n            tagIds,\n          },\n        },\n      };\n    },\n    {},\n  );\n\nexport const groupCommonExpenseIdsByCount = (\n  expenses: GroupedCommonExpenses,\n): ExpensesByCount =>\n  Object.entries(expenses).reduce(\n    (countReferences: ExpensesByCount, [key, { count, expense }]) => {\n      return {\n        ...countReferences,\n        [count]: !countReferences[count]\n          ? [key]\n          : [...countReferences[count], key],\n      };\n    },\n    {},\n  );\n\nexport const sortExpenseIdsByCount = (expenses: ExpensesByCount): string[] => {\n  const comparator = (a: number, b: number) => (a > b ? a : b);\n  const sortedIds: number[] = Object.keys(expenses)\n    .map((num) => Number(num))\n    .sort(comparator)\n    .reverse();\n\n  return sortedIds.reduce(\n    (memo: string[], id: number) => {\n      return !memo ? expenses[id] : [...memo, ...expenses[id]];\n    },\n    [] as string[],\n  );\n};\n","import React from 'react';\nimport CommonExpensesList from './CommonExpensesList';\nimport { State } from '../../../store/initialState';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ExpensePopulated } from '../../../types/model';\nimport { filterExpensesByAccount } from '../../tables/helpers/common';\nimport * as expenseActionCreators from '../../../store/expense/actions';\nimport { genId } from '../../../utils';\nimport { Expense } from '../../../types/model';\nimport {\n  groupCommonExpenses,\n  groupCommonExpenseIdsByCount,\n  sortExpenseIdsByCount,\n} from './utils';\n\nexport default function CommonExpensesListContainer() {\n  const { expenses, categories, tags, selectedAccount } = useSelector(\n    ({ expenses, categories, tags, selectedAccount }: State) => ({\n      expenses,\n      categories,\n      tags,\n      selectedAccount,\n    }),\n  );\n\n  const dispatch = useDispatch();\n  const { createExpense } = bindActionCreators(expenseActionCreators, dispatch);\n\n  const accountExpenses = filterExpensesByAccount(\n    Object.values(expenses),\n    selectedAccount.id,\n  );\n\n  const groupedExpenses = groupCommonExpenses(accountExpenses);\n  const expenseIdsByCount = groupCommonExpenseIdsByCount(groupedExpenses);\n  const sortedExpenseIdsByMostCommon = sortExpenseIdsByCount(expenseIdsByCount);\n  const mostCommonExpenseList: ExpensePopulated[] = sortedExpenseIdsByMostCommon\n    .slice(0, 5)\n    .map((id) => groupedExpenses[id].expense)\n    .map(({ amount, categoryId, tagIds }) => {\n      const category = categories[categoryId];\n      const tagList = tagIds.map((tagId) => tags.byIds[tagId]);\n\n      return { amount, category, tags: tagList };\n    });\n\n  const onClick = (item: ExpensePopulated) => () => {\n    const expense: Expense = {\n      id: genId(20),\n      amount: item.amount,\n      categoryId: item.category.id,\n      tagIds: item.tags.map(({ id }) => id),\n      accountId: selectedAccount.id,\n      createdTs: new Date(),\n    };\n\n    createExpense(expense);\n  };\n\n  return (\n    <CommonExpensesList dataSource={mostCommonExpenseList} onClick={onClick} />\n  );\n}\n","import React from 'react';\nimport { Center, Align, Card } from '../components/ui/';\nimport { WithHeading } from '../components/enhancer';\nimport CreateExpenseFormContainer from '../components/forms/expense/CreateExpenseFormContainer';\nimport CommonExpensesListContainer from '../components/list/common-expenses/CommonExpensesListContainer';\n\nexport default function ExpenseComponent() {\n  return (\n    <Center>\n      <Align content=\"evenly\">\n        <Card width={'350px'}>\n          <WithHeading title={'Add New Transaction'}>\n            <CreateExpenseFormContainer />\n          </WithHeading>\n        </Card>\n        <Card width={'60%'}>\n          <WithHeading title={'Add Common Transaction'}>\n            <CommonExpensesListContainer />\n          </WithHeading>\n        </Card>\n      </Align>\n    </Center>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Label = styled.label`\n  display: block;\n  color: ${({ color }) => color || 'black'};\n  font-size: 1.2rem;\n`;\n\ntype LabelProps = { title: string; color: string };\n\nexport default function LabelComponent({ title, color }: LabelProps) {\n  return <Label color={color}>{title}</Label>;\n}\n","import React from 'react';\nimport { AutoComplete, Button } from 'antd';\nimport Label from './Label';\nimport Align from '../../ui/Align';\n\ntype PresenterProps = {\n  input: string;\n  tagExists: boolean;\n  tagNames: string[];\n  handleChange: (e: any) => void;\n  disabled: boolean;\n  handleSubmit: () => void;\n};\n\nexport default function CreateTagFormComponent({\n  input,\n  tagExists,\n  tagNames,\n  handleChange,\n  disabled,\n  handleSubmit,\n}: PresenterProps) {\n  return (\n    <div>\n      {tagExists && (\n        <Label\n          title=\"This tag already exists. Please enter a new one.\"\n          color=\"red\"\n        />\n      )}\n      <Align>\n        <AutoComplete\n          style={{\n            width: 200,\n            marginRight: '1rem',\n          }}\n          dataSource={tagNames}\n          placeholder=\"Type to create a new tag\"\n          allowClear={true}\n          value={input}\n          onChange={handleChange}\n          filterOption={(inputValue: string, option: any): boolean =>\n            option.props.children\n              .toUpperCase()\n              .indexOf(inputValue.toUpperCase()) !== -1\n          }\n        />\n        <Button type=\"primary\" disabled={disabled} onClick={handleSubmit}>\n          Create\n        </Button>\n      </Align>\n    </div>\n  );\n}\n","import { Tag } from '../../types/model';\n\nexport const CREATE_TAG = 'CREATE_TAG';\n\ninterface CreateTagAction {\n  type: typeof CREATE_TAG;\n  tag: Tag;\n}\n\nexport type TagActionTypes = CreateTagAction;\n","import { CREATE_TAG } from './types';\nimport { Tag } from '../../types/model';\n\nexport const createTag = (tag: Tag) => ({\n  type: CREATE_TAG,\n  tag,\n});\n","import React, { useState, SetStateAction } from 'react';\nimport CreateTagFormComponent from './CreateTagFormComponent';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { State } from '../../../store/initialState';\nimport * as tagActionCreators from '../../../store/tag/actions';\nimport { message } from 'antd';\nimport { genId } from '../../../utils';\n\nexport default function CreateTagFormContainer() {\n  const { tags } = useSelector(({ tags }: State) => ({ tags }));\n\n  const dispatch = useDispatch();\n  const { createTag } = bindActionCreators(tagActionCreators, dispatch);\n\n  const [input, setInput] = useState('');\n\n  const tagNames = Object.keys(tags.byNames);\n  const tagExists = tagNames.includes(input);\n  const disabled = tagExists || input === '';\n\n  const handleSubmit = () => {\n    createTag({ id: genId(20), name: input });\n    message.success(`Tag ${input} was successfully created`);\n    setInput('');\n  };\n  const handleChange = (e: SetStateAction<string>) => setInput(e);\n\n  return (\n    <CreateTagFormComponent\n      input={input}\n      tagExists={tagExists}\n      disabled={disabled}\n      tagNames={tagNames}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n    />\n  );\n}\n","import React from 'react';\nimport Card from '../components/ui/Card';\nimport Centered from '../components/ui/Center';\nimport CreateTagContainer from '../components/forms/tag/CreateTagFormContainer';\nimport WithHeading from '../components/enhancer/WithHeading';\n\nexport default function Container() {\n  return (\n    <Centered>\n      <Card width={'325px'}>\n        <WithHeading title={'Create a new tag'}>\n          <CreateTagContainer />\n        </WithHeading>\n      </Card>\n    </Centered>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { AutoComplete, Button } from 'antd';\nimport { Align } from '../../ui';\n\ntype CreateAndSelectAccountProps = {\n  input: string;\n  loading: boolean;\n  accountExists: boolean;\n  dataSource: string[];\n  disabled: boolean;\n  handleCreate: (e: MouseEvent) => void;\n  handleChange: (e: any) => void;\n  handleSelect: (e: MouseEvent) => void;\n};\nexport default function CreateAndSelectAccountFormComponent({\n  input,\n  loading,\n  accountExists,\n  dataSource,\n  disabled,\n  handleChange,\n  handleCreate,\n  handleSelect,\n}: CreateAndSelectAccountProps) {\n  return (\n    <Align>\n      <AutoComplete\n        style={{ width: 200 }}\n        dataSource={dataSource}\n        placeholder=\"Type to create a new account:\"\n        allowClear={true}\n        value={input}\n        onChange={handleChange}\n      />\n\n      {!accountExists ? (\n        <Button\n          type=\"primary\"\n          loading={loading}\n          onClick={handleCreate}\n          disabled={disabled}\n        >\n          Create\n        </Button>\n      ) : (\n        <Button\n          type=\"primary\"\n          loading={loading}\n          onClick={handleSelect}\n          disabled={disabled}\n        >\n          Select\n        </Button>\n      )}\n    </Align>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { message } from 'antd';\nimport CreateAndSelectAccountFormComponent from './CreateAndSelectAccountFormComponent';\nimport * as accountActionCreators from '../../../store/account/actions';\nimport { State } from '../../../store/initialState';\nimport { genId } from '../../../utils';\n\nexport default function CreateAndSelectAccountFormContainer() {\n  const { selectedAccount, accountList } = useSelector(\n    ({ selectedAccount, accountList }: State) => ({\n      selectedAccount,\n      accountList,\n    }),\n  );\n  const dispatch = useDispatch();\n  const { createAccount, selectAccount } = bindActionCreators(\n    accountActionCreators,\n    dispatch,\n  );\n\n  const [input, setInput] = useState(\n    selectedAccount ? selectedAccount.name : '',\n  );\n  const [loading] = useState(false);\n\n  const accountExists =\n    Object.values(accountList).find(({ name }) => name === input) !== undefined;\n  const selectDisabled = input === selectedAccount.name;\n\n  useEffect(() => {\n    if (selectedAccount) {\n      message.info(`${selectedAccount.name} is now the default account.`);\n    }\n  }, [selectedAccount]);\n\n  return (\n    <CreateAndSelectAccountFormComponent\n      input={input}\n      loading={loading}\n      accountExists={accountExists}\n      dataSource={Object.values(accountList).map(({ name }) => name)}\n      handleChange={(e) => setInput(e)}\n      handleCreate={() =>\n        createAccount({\n          id: genId(20),\n          name: input,\n        })\n      }\n      handleSelect={() => {\n        const accountSelected = Object.values(accountList).find(\n          ({ name }) => name === input,\n        );\n        selectAccount(accountSelected || { id: 2, name: 'Account3' });\n      }}\n      disabled={selectDisabled}\n    />\n  );\n}\n","import React from 'react';\nimport Card from '../components/ui/Card';\nimport Centered from '../components/ui/Center';\nimport CreateAndSelectAccountContainer from '../components/forms/account/CreateAndSelectAccountFormContainer';\nimport WithHeading from '../components/enhancer/WithHeading';\n\nexport default function Container() {\n  return (\n    <Centered>\n      <Card width={'325px'}>\n        <WithHeading title={'Create or Select account'}>\n          <CreateAndSelectAccountContainer />\n        </WithHeading>\n      </Card>\n    </Centered>\n  );\n}\n","import React from 'react';\nimport { Table } from 'antd';\n\ntype TableComponentProps = {\n  columns: {\n    title: string;\n    dataIndex: string;\n    key: string;\n  }[];\n\n  dataSource: { key: number; [props: string]: any | any[] }[];\n};\n\nexport default function TableComponent({\n  columns,\n  dataSource,\n}: TableComponentProps) {\n  return (\n    <Table\n      size=\"small\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={{ pageSize: 50 }}\n      scroll={{ y: 240 }}\n    />\n  );\n}\n","import React from 'react';\nimport { Tag } from 'antd';\n\nexport const columns = [\n  {\n    title: 'Category',\n    dataIndex: 'category',\n    key: 'category',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount',\n    key: 'amount',\n  },\n  {\n    title: 'Tags',\n    dataIndex: 'tags',\n    key: 'tags',\n    render: (tagNames: string[]) => (\n      <span>\n        {tagNames.map((tag) => {\n          let color = tag.length > 5 ? 'geekblue' : 'blue';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: 'Added',\n    dataIndex: 'created',\n    key: 'created',\n  },\n];\n","import { Expense, CategoryList, TagList } from '../../../types/model';\n\ntype ExpenseDataItem = { key: number } & {\n  amount: number;\n  category: string;\n  tags: string[];\n  created: string;\n};\n\nexport const createExpenseDataSource = (\n  expenses: Expense[],\n  categories: CategoryList,\n  tags: TagList,\n): ExpenseDataItem[] => {\n  return expenses.map(({ id, amount, categoryId, tagIds, createdTs }) => {\n    const category = categories[categoryId];\n    const tagNames = tagIds.map((tagId) => tags.byIds[tagId].name);\n\n    return {\n      amount,\n      key: id,\n      category: category ? category.name : '',\n      tags: tagNames,\n      created: createdTs.toDateString(),\n    };\n  });\n};\n","import React from 'react';\nimport Table from './TableComponent';\nimport { State } from '../../store/initialState';\nimport { useSelector } from 'react-redux';\nimport { columns } from './column-configurations/expense';\nimport { createExpenseDataSource } from './helpers/expense';\nimport { filterExpenses } from './helpers/common';\n\nexport default function Container() {\n  const {\n    tags,\n    expenses,\n    categories,\n    selectedAccount,\n    selectedPeriod,\n  } = useSelector(\n    ({\n      tags,\n      expenses,\n      categories,\n      selectedAccount,\n      selectedPeriod,\n    }: State) => ({\n      tags,\n      expenses,\n      categories,\n      selectedAccount,\n      selectedPeriod,\n    }),\n  );\n\n  const filteredExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const dataSource = createExpenseDataSource(\n    filteredExpenses,\n    categories,\n    tags,\n  );\n\n  return <Table columns={columns} dataSource={dataSource} />;\n}\n","export const columns = [\n  {\n    title: 'Category',\n    dataIndex: 'category',\n    key: 'category',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount',\n    key: 'amount',\n  },\n];\n","import { ExpenseList, CategoryList } from '../../../types/model';\n\nexport const groupExpensesByCategory = (\n  expenses: ExpenseList,\n): { [key: number]: number } => {\n  return Object.values(expenses).reduce(\n    (\n      memo: { [categoryId: number]: number },\n      { amount, categoryId }: { amount: number; categoryId: number },\n    ) => {\n      return {\n        ...memo,\n        [categoryId]: memo[categoryId] ? memo[categoryId] + amount : amount,\n      };\n    },\n    {},\n  );\n};\n\ntype CategoryDataItem = { key: number } & {\n  amount: number;\n  category: string;\n};\n\nexport const createCategoryDataSource = (\n  categorizedExpenses: {\n    [key: number]: number;\n  },\n  categories: CategoryList,\n): CategoryDataItem[] =>\n  Object.entries(categorizedExpenses).map(([categoryId, amount]) => {\n    const category = categories[Number(categoryId)];\n    return {\n      amount,\n      key: Number(categoryId),\n      category: category ? category.name : '',\n    };\n  });\n","import React from 'react';\nimport Table from './TableComponent';\nimport { State } from '../../store/initialState';\nimport { useSelector } from 'react-redux';\nimport { columns } from './column-configurations/category';\nimport {\n  groupExpensesByCategory,\n  createCategoryDataSource,\n} from './helpers/category';\nimport { filterExpenses } from './helpers/common';\n\nexport default function Container() {\n  const { categories, expenses, selectedAccount, selectedPeriod } = useSelector(\n    ({ categories, expenses, selectedAccount, selectedPeriod }: State) => ({\n      categories,\n      expenses,\n      selectedAccount, selectedPeriod\n    }),\n  );\n\n  const filteredExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const categorizedExpenses = groupExpensesByCategory(filteredExpenses);\n  const dataSource = createCategoryDataSource(categorizedExpenses, categories);\n\n  return <Table columns={columns} dataSource={dataSource} />;\n}\n","export const columns = [\n  {\n    title: 'Tag',\n    dataIndex: 'tag',\n    key: 'tag',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount',\n    key: 'amount',\n  },\n];\n","import { TagList, Expense } from '../../../types/model';\n\nexport const groupExpensesByTag = (\n  expenses: Expense[],\n): { [key: number]: number } => {\n  return expenses.reduce(\n    (memo: { [tagId: number]: number }, { tagIds, amount }: Expense) => {\n      return tagIds.reduce(\n        (groupedExpenses: { [tagId: number]: number }, tagId: number) => {\n          return {\n            ...groupedExpenses,\n            [tagId]: groupedExpenses[tagId]\n              ? groupedExpenses[tagId] + amount\n              : amount,\n          };\n        },\n        memo,\n      );\n    },\n    {},\n  );\n};\n\ntype TagDataItem = { key: number } & {\n  amount: number;\n  tag: string;\n};\n\nexport const createTagDataSource = (\n  categorizedExpenses: {\n    [key: number]: number;\n  },\n  tags: TagList,\n): TagDataItem[] =>\n  Object.entries(categorizedExpenses).map(([tagId, amount]) => {\n    const tag = tags.byIds[Number(tagId)];\n    return {\n      amount,\n      key: Number(tagId),\n      tag: tag ? tag.name : '',\n    };\n  });\n","import React from 'react';\nimport Table from './TableComponent';\nimport { State } from '../../store/initialState';\nimport { useSelector } from 'react-redux';\nimport { columns } from './column-configurations/tag';\nimport { groupExpensesByTag, createTagDataSource } from './helpers/tag';\nimport { filterExpenses } from './helpers/common';\n\nexport default function Container() {\n  const { tags, expenses, selectedAccount, selectedPeriod } = useSelector(\n    ({ tags, expenses, selectedAccount, selectedPeriod }: State) => ({\n      tags,\n      expenses,\n      selectedAccount,\n      selectedPeriod,\n    }),\n  );\n\n  const filteredExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const categorizedExpenses = groupExpensesByTag(\n    Object.values(filteredExpenses),\n  );\n  \n  const dataSource = createTagDataSource(categorizedExpenses, tags);\n\n  return <Table columns={columns} dataSource={dataSource} />;\n}\n","import React, { SetStateAction, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { message } from 'antd';\nimport { SingleSelectComponent } from '../select';\nimport * as accountActionCreators from '../../store/account/actions';\nimport { State } from '../../store/initialState';\nimport { FormElementProps } from '../../types/form';\n\nexport default function SelectAccountContainer() {\n  const { selectedAccount, accountList } = useSelector(\n    ({ selectedAccount, accountList }: State) => ({\n      selectedAccount,\n      accountList,\n    }),\n  );\n  const dispatch = useDispatch();\n  const { selectAccount } = bindActionCreators(accountActionCreators, dispatch);\n  const handleAccountSelect = (id: SetStateAction<string>) =>\n    selectAccount(accountList[Number(id)]);\n\n  useEffect(() => {\n    if (selectedAccount) {\n      message.info(`${selectedAccount.name} is now the default account.`);\n    }\n  }, [selectedAccount]);\n\n  const account: FormElementProps = {\n    options: Object.values(accountList),\n    selected: selectedAccount.id,\n    onChange: handleAccountSelect,\n  };\n\n  return <SingleSelectComponent props={account} />;\n}\n","import { Period } from '../../types/model';\n\nexport const SELECT_PERIOD = 'SELECT_PERIOD';\n\ninterface SelectPeriodAction {\n  type: typeof SELECT_PERIOD;\n  period: Period;\n}\n\nexport type PeriodActionTypes = SelectPeriodAction;\n","import { SELECT_PERIOD } from './types';\nimport { Period } from '../../types/model';\n\nexport const selectPeriod = (period: Period) => ({\n  type: SELECT_PERIOD,\n  period,\n});\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SingleSelectComponent } from '../select';\nimport * as periodActionCreators from '../../store/period/actions';\nimport { State } from '../../store/initialState';\nimport { FormElementProps } from '../../types/form';\n\nexport default function SelectPeriodContainer() {\n  const { selectedPeriod, periodList } = useSelector(\n    ({ selectedPeriod, periodList }: State) => ({\n      selectedPeriod,\n      periodList,\n    }),\n  );\n  const dispatch = useDispatch();\n  const { selectPeriod } = bindActionCreators(periodActionCreators, dispatch);\n  const handlePeriodSelect = (id: number) => {\n    selectPeriod(periodList[id]);\n  };\n\n  const period: FormElementProps = {\n    options: Object.values(periodList),\n    selected: selectedPeriod.id,\n    onChange: handlePeriodSelect,\n  };\n\n  return <SingleSelectComponent props={period} />;\n}\n","import { Expense } from '../../../types/model';\n\nexport const sumExpenses = (expenseArray: Expense[]): number =>\n  expenseArray.reduce((sum, { amount }) => sum + amount, 0);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../store/initialState';\nimport { filterExpensesByAccount } from '../tables/helpers/common';\nimport { sumExpenses } from './utils';\n\nexport default function Balance() {\n  const { expenses, selectedAccount } = useSelector(\n    ({ expenses, selectedAccount }: State) => ({\n      expenses,\n      selectedAccount,\n    }),\n  );\n\n  const accountExpenses = filterExpensesByAccount(\n    Object.values(expenses),\n    selectedAccount.id,\n  );\n\n  const balance = sumExpenses(accountExpenses);\n\n  return <h1>{`${balance} Ft`}</h1>;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../store/initialState';\nimport { filterExpenses } from '../tables/helpers/common';\nimport { sumExpenses } from './utils';\nimport { Align } from '../ui';\n\nexport default function MoneyFlow() {\n  const { expenses, selectedAccount, selectedPeriod } = useSelector(\n    ({ expenses, selectedAccount, selectedPeriod }: State) => ({\n      expenses,\n      selectedAccount,\n      selectedPeriod,\n    }),\n  );\n\n  const accountExpenses = filterExpenses(\n    Object.values(expenses),\n    selectedAccount.id,\n    selectedPeriod.id,\n  );\n\n  const moneyFlow = sumExpenses(accountExpenses);\n\n  return (\n    <Align>\n      <h2>{`${moneyFlow} Ft`}</h2>\n      <span>{selectedPeriod.name}</span>\n    </Align>\n  );\n}\n","import React from 'react';\nimport AllExpenses from '../components/tables/ExpenseTableContainer';\nimport ExpensesByCategory from '../components/tables/CategoryTableContainer';\nimport ExpensesByTags from '../components/tables/TagTableContainer';\nimport SelectAccountContainer from '../components/redux-dropdowns/SelectAccountContainer';\nimport SelectPeriodContainer from '../components/redux-dropdowns/SelectPeriodContainer';\nimport Balance from '../components/readonly/Balance';\nimport MoneyFlow from '../components/readonly/MoneyFlow';\nimport { Card, Center, Align } from '../components/ui';\nimport WithHeading from '../components/enhancer/WithHeading';\nimport { Tabs } from 'antd';\n\nconst { TabPane } = Tabs;\n\nexport default function PresenterComponent() {\n  return (\n    <Align content=\"evenly\">\n      <Tabs type=\"card\">\n        <TabPane tab=\"All Expenses\" key=\"1\">\n          <Card>\n            <WithHeading title={'All Expenses'}>\n              <AllExpenses />\n            </WithHeading>\n          </Card>\n        </TabPane>\n        <TabPane tab=\"Expenses by Categories\" key=\"2\">\n          <Card>\n            <WithHeading title={'Expenses by Categories'}>\n              <ExpensesByCategory />\n            </WithHeading>\n          </Card>\n        </TabPane>\n        <TabPane tab=\"Expenses by Tags\" key=\"3\">\n          <Card>\n            <WithHeading title={'Expenses by Tags'}>\n              <ExpensesByTags />\n            </WithHeading>\n          </Card>\n        </TabPane>\n      </Tabs>\n      <Center>\n        <Align type=\"vertical\">\n          <Card>\n            <WithHeading title={'Current Balance'}>\n              <Balance />\n            </WithHeading>\n          </Card>\n          <Card>\n            <WithHeading title={'Money Flow'}>\n              <MoneyFlow />\n            </WithHeading>\n          </Card>\n          <Card>\n            <WithHeading title={'Select Account'}>\n              <SelectAccountContainer></SelectAccountContainer>\n            </WithHeading>\n          </Card>\n          <Card>\n            <WithHeading title={'Select Period'}>\n              <SelectPeriodContainer />\n            </WithHeading>\n          </Card>\n        </Align>\n      </Center>\n    </Align>\n  );\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Expense, Tag, Account, Dashboard } from '../screens';\nimport { spaces, headerSize } from '../consts';\n\nexport default function MainComponent(): JSX.Element {\n  return (\n    <Main>\n      <Switch>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/expense\" component={Expense} />\n        <Route path=\"/tag\" component={Tag} />\n        <Route path=\"/account\" component={Account} />\n      </Switch>\n    </Main>\n  );\n}\n\nconst Main = styled.main`\n  padding: calc(${headerSize} + 1rem) ${spaces.m} 1rem;\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './layout/Header';\nimport Main from './layout/Main';\nimport styled from 'styled-components';\nimport { message } from 'antd';\n\nmessage.config({\n  top: 60,\n  duration: 2,\n});\n\nconst App = styled.div`\n  background-color: rgb(224, 223, 223);\n  height: inherit;\n`;\nexport default function AppComponent(): JSX.Element {\n  return (\n    <App>\n      <BrowserRouter>\n        <Header />\n        <Main />\n      </BrowserRouter>\n    </App>\n  );\n}\n","import { generateArray, generateObject, objectify } from '../utils';\nimport {\n  CategoryList,\n  TagList,\n  ExpenseList,\n  AccountList,\n  PeriodList,\n} from '../types/model';\n\nexport const categories: CategoryList = generateArray(10, 'Category');\nexport const tagArray = generateArray(10, 'Tag');\nexport const tags: TagList = {\n  byIds: objectify(tagArray, 'id'),\n  byNames: objectify(tagArray, 'name'),\n};\n\nexport const accountList: AccountList = generateObject(10, 'Account');\n\nconst DAY_IN_MINUTES = 24 * 60;\nconst WEEK_IN_MINUTES = 7 * DAY_IN_MINUTES;\nexport const MONTH_IN_MINUTES = 30 * DAY_IN_MINUTES;\nconst YEAR_IN_MINUTES = 365 * DAY_IN_MINUTES;\n\nconst createDate = (differenceInMinutes: number): Date => {\n  const tempDate = new Date();\n  tempDate.setMinutes(tempDate.getMinutes() + differenceInMinutes);\n  return tempDate;\n}\nexport const periodList: PeriodList = objectify([\n  { id: DAY_IN_MINUTES, name: 'Last day' },\n  { id: WEEK_IN_MINUTES, name: 'Last 7 days' },\n  { id: MONTH_IN_MINUTES, name: 'Last 30 days' },\n  { id: YEAR_IN_MINUTES, name: 'Last 365 days' },\n  { id: -1, name: 'Full history' },\n]);\n\nexport const expenses: ExpenseList = false ? [] : objectify(\n  [\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: 25000, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: 25000, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: 25000, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: 25000, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: 200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: 200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: 200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: 500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: 2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: 600, createdTs: createDate(-1 * DAY_IN_MINUTES * 4), categoryId: 4, accountId: 4, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 6), categoryId: 6, accountId: 6, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 7), categoryId: 7, accountId: 7, tagIds: [0] },\n    { amount: 100, createdTs: createDate(-1 * DAY_IN_MINUTES * 6), categoryId: 6, accountId: 6, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 5), categoryId: 5, accountId: 5, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 7), categoryId: 7, accountId: 7, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [2, 3, 4] },\n    { amount: 2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 9), categoryId: 9, accountId: 9, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [1] },\n    { amount: 6000, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 8), categoryId: 8, accountId: 8, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 9), categoryId: 9, accountId: 9, tagIds: [3] },\n    { amount: 500, createdTs: createDate(-1 * DAY_IN_MINUTES * 7), categoryId: 7, accountId: 7, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 5), categoryId: 5, accountId: 5, tagIds: [2, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: 300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: 600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: 500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: 1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [1, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: 300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: 5000, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 6, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [4, 3, 2] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [0, 1] },\n    { amount: -1500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [2, 3, 4] },\n    { amount: -2500, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [4] },\n    { amount: -300, createdTs: createDate(-1 * DAY_IN_MINUTES * 3), categoryId: 3, accountId: 3, tagIds: [5] },\n    { amount: -200, createdTs: createDate(-1 * DAY_IN_MINUTES * 0), categoryId: 0, accountId: 0, tagIds: [1] },\n    { amount: -600, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -100, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [0] },\n    { amount: -500, createdTs: createDate(-1 * DAY_IN_MINUTES * 1), categoryId: 1, accountId: 1, tagIds: [3] },\n  ].map((x, id) => ({ ...x, id })),\n);\n","import {\n  categories,\n  tags,\n  expenses,\n  accountList,\n  periodList,\n  MONTH_IN_MINUTES,\n} from '../assets';\nimport {\n  CategoryList,\n  TagList,\n  ExpenseList,\n  Account,\n  AccountList,\n  Period,\n  PeriodList,\n} from '../types/model';\n\n// TODO: move effects to somewhere else\n\nexport type State = {\n  selectedAccount: Account;\n  selectedPeriod: Period;\n  periodList: PeriodList;\n  accountList: AccountList;\n  categories: CategoryList;\n  tags: TagList;\n  expenses: ExpenseList;\n};\n\nconst selectedAccount = Object.values(accountList)[0];\nconst selectedPeriod = periodList[MONTH_IN_MINUTES];\n\nconst initialState: State = {\n  selectedPeriod,\n  selectedAccount,\n  periodList,\n  accountList,\n  categories,\n  tags,\n  expenses,\n};\n\nexport default initialState;\n","import initialState, { State } from './initialState';\n\nimport { accountReducer } from './account/reducer';\nimport { tagReducer } from './tag/reducer';\nimport { expenseReducer } from './expense/reducer';\nimport { periodReducer } from './period/reducer';\n\nconst reducers = [accountReducer, tagReducer, expenseReducer, periodReducer];\n\n// the reducer is called whenever a dispatch action is made.\n// the action.type is a string which maps to a function in Actions.\n// We apply the update to existing state, and return a new copy of state.\nconst rootReducer = (state: State = initialState, action: any): State => {\n  const update = reducers.reduce(\n    (previousState, reducer) => reducer(previousState, action),\n    state,\n  );\n  return { ...state, ...update };\n};\n\nexport default rootReducer;\n","import { SELECT_ACCOUNT, CREATE_ACCOUNT, AccountActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function accountReducer(\n  state: State,\n  { type, account }: AccountActionTypes,\n) {\n  switch (type) {\n    case SELECT_ACCOUNT:\n      return {\n        ...state,\n        selectedAccount: account,\n      };\n    case CREATE_ACCOUNT:\n      return {\n        ...state,\n        selectedAccount: account,\n        accountList: {\n          ...state.accountList,\n          [account.id]: account,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { CREATE_TAG, TagActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function tagReducer(state: State, { type, tag }: TagActionTypes) {\n  switch (type) {\n    case CREATE_TAG:\n      return {\n        ...state,\n        tags: { ...state.tags, [tag.id]: tag },\n      };\n    default:\n      return state;\n  }\n}\n","import { CREATE_EXPENSE, ExpenseActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function expenseReducer(\n  state: State,\n  { type, expense }: ExpenseActionTypes,\n) {\n  switch (type) {\n    case CREATE_EXPENSE:\n      return {\n        ...state,\n        expenses: {\n          ...state.expenses,\n          [expense.id]: expense,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { SELECT_PERIOD, PeriodActionTypes } from './types';\nimport { State } from '../initialState';\n\nexport function periodReducer(\n  state: State,\n  { type, period }: PeriodActionTypes,\n) {\n  switch (type) {\n    case SELECT_PERIOD:\n      return {\n        ...state,\n        selectedPeriod: period,\n      };\n\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/rootReducer';\n\nconst store = createStore(rootReducer);\nconsole.log('store');\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}